<?xml version="1.0"?>
<phpunit xmlns="http://schema.phpunit.de/coverage/1.0">
  <file name="UnitTestSupport.php" path="/">
    <totals>
      <lines total="221" comments="144" code="77" executable="79" executed="79" percent="100.00"/>
      <methods count="16" tested="16" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="UnitTestSupport" start="13" executable="79" executed="79" crap="33">
      <package full="" name="" sub="" category=""/>
      <namespace name="Motley"/>
      <method name="invokeFunction" signature="invokeFunction(&amp;$obj, $funcName, array $argArr=array())" start="35" end="41" crap="1" executable="5" executed="5" coverage="100"/>
      <method name="errorHandlerForCapturing" signature="errorHandlerForCapturing(&#10;        int $errno, string $errstr, string $errfile, int $errline)" start="49" end="58" crap="1" executable="7" executed="7" coverage="100"/>
      <method name="engageCaptureHandler" signature="engageCaptureHandler(int $error_types=E_ALL|E_STRICT)" start="63" end="68" crap="1" executable="5" executed="5" coverage="100"/>
      <method name="disengageCaptureHandler" signature="disengageCaptureHandler()" start="72" end="77" crap="2" executable="4" executed="4" coverage="100"/>
      <method name="getCapturedErrors" signature="getCapturedErrors()" start="82" end="84" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="clearCapturedErrors" signature="clearCapturedErrors()" start="88" end="90" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="__construct" signature="__construct()" start="101" end="104" crap="1" executable="3" executed="3" coverage="100"/>
      <method name="setTmpDirRoot" signature="setTmpDirRoot(string $rootDir)" start="108" end="110" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="getTmpDirRoot" signature="getTmpDirRoot() : string" start="114" end="116" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="createTmpRootDir" signature="createTmpRootDir() : string" start="120" end="128" crap="3" executable="6" executed="6" coverage="100"/>
      <method name="createTmpSubDir" signature="createTmpSubDir(string $relSubDir=null)" start="134" end="146" crap="4" executable="9" executed="9" coverage="100"/>
      <method name="createTmpDummyFile" signature="createTmpDummyFile(&#10;        string $filespec, string $dummy=&quot;&quot;, int $repeat=0)" start="154" end="172" crap="5" executable="14" executed="14" coverage="100"/>
      <method name="getTmpDirsCreated" signature="getTmpDirsCreated()" start="176" end="178" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getTmpFilesCreated" signature="getTmpFilesCreated()" start="182" end="184" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="cleanupTmp" signature="cleanupTmp()" start="187" end="203" crap="5" executable="10" executed="10" coverage="100"/>
      <method name="recursiveRmdir" signature="recursiveRmdir(string $path)" start="207" end="218" crap="4" executable="8" executed="8" coverage="100"/>
    </class>
    <coverage>
      <line nr="36">
        <covered by="Motley\Test\CommandComponentTest::testSaveLastParam"/>
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
        <covered by="Motley\Test\UnitTestSupportTest::testInvokeFunction"/>
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="37">
        <covered by="Motley\Test\CommandComponentTest::testSaveLastParam"/>
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
        <covered by="Motley\Test\UnitTestSupportTest::testInvokeFunction"/>
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="38">
        <covered by="Motley\Test\CommandComponentTest::testSaveLastParam"/>
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
        <covered by="Motley\Test\UnitTestSupportTest::testInvokeFunction"/>
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="39">
        <covered by="Motley\Test\CommandComponentTest::testSaveLastParam"/>
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
        <covered by="Motley\Test\UnitTestSupportTest::testInvokeFunction"/>
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="40">
        <covered by="Motley\Test\CommandComponentTest::testSaveLastParam"/>
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
        <covered by="Motley\Test\UnitTestSupportTest::testInvokeFunction"/>
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="51">
        <covered by="Motley\Test\CheckerTest::testChecking"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="52">
        <covered by="Motley\Test\CheckerTest::testChecking"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="53">
        <covered by="Motley\Test\CheckerTest::testChecking"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="54">
        <covered by="Motley\Test\CheckerTest::testChecking"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="55">
        <covered by="Motley\Test\CheckerTest::testChecking"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="56">
        <covered by="Motley\Test\CheckerTest::testChecking"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="57">
        <covered by="Motley\Test\CheckerTest::testChecking"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="64">
        <covered by="Motley\Test\CheckerTest::testChecking"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="65">
        <covered by="Motley\Test\CheckerTest::testChecking"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="66">
        <covered by="Motley\Test\CheckerTest::testChecking"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="67">
        <covered by="Motley\Test\CheckerTest::testChecking"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="68">
        <covered by="Motley\Test\CheckerTest::testChecking"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="73">
        <covered by="Motley\Test\CheckerTest::testChecking"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="74">
        <covered by="Motley\Test\CheckerTest::testChecking"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="75">
        <covered by="Motley\Test\CheckerTest::testChecking"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="77">
        <covered by="Motley\Test\CheckerTest::testChecking"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="83">
        <covered by="Motley\Test\CheckerTest::testChecking"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="89">
        <covered by="Motley\Test\CheckerTest::testChecking"/>
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
      </line>
      <line nr="90">
        <covered by="Motley\Test\CheckerTest::testChecking"/>
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
      </line>
      <line nr="102">
        <covered by="Motley\Test\CommandMessengerTest::testNew"/>
        <covered by="Motley\Test\CommandMessengerTest::testSetGetErrorExitLevel"/>
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="103">
        <covered by="Motley\Test\CommandMessengerTest::testNew"/>
        <covered by="Motley\Test\CommandMessengerTest::testSetGetErrorExitLevel"/>
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="104">
        <covered by="Motley\Test\CommandMessengerTest::testNew"/>
        <covered by="Motley\Test\CommandMessengerTest::testSetGetErrorExitLevel"/>
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="109">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="110">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="115">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="121">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="122">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="123">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="124">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="125">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="127">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="135">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="136">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="137">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="139">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="141">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="142">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="143">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="144">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="145">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="157">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="158">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="159">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="160">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="161">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="162">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="163">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="164">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="165">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="166">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="167">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="168">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="170">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="171">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="177">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="183">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="189">
        <covered by="Motley\Test\CommandMessengerTest::testNew"/>
        <covered by="Motley\Test\CommandMessengerTest::testSetGetErrorExitLevel"/>
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="190">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="191">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="194">
        <covered by="Motley\Test\CommandMessengerTest::testNew"/>
        <covered by="Motley\Test\CommandMessengerTest::testSetGetErrorExitLevel"/>
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="196">
        <covered by="Motley\Test\CommandMessengerTest::testNew"/>
        <covered by="Motley\Test\CommandMessengerTest::testSetGetErrorExitLevel"/>
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="197">
        <covered by="Motley\Test\CommandMessengerTest::testNew"/>
        <covered by="Motley\Test\CommandMessengerTest::testSetGetErrorExitLevel"/>
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="198">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="199">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="202">
        <covered by="Motley\Test\CommandMessengerTest::testNew"/>
        <covered by="Motley\Test\CommandMessengerTest::testSetGetErrorExitLevel"/>
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="203">
        <covered by="Motley\Test\CommandMessengerTest::testNew"/>
        <covered by="Motley\Test\CommandMessengerTest::testSetGetErrorExitLevel"/>
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="208">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="209">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="210">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="211">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="212">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="214">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="217">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="218">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_COMMENT">/// Source code file for the Motley::UnitTestSupport class.</token>
      </line>
      <line no="3">
        <token name="T_COMMENT">/// @copyright Copyright (c) 2017, Eric Alan Christiansen.\n</token>
      </line>
      <line no="4">
        <token name="T_COMMENT">/// MIT License. See &lt;https://opensource.org/licenses/MIT&gt;.</token>
      </line>
      <line no="5">
        <token name="T_COMMENT">/// @file</token>
      </line>
      <line no="6">
        <token name="T_COMMENT">### Note: This file uses Uses doxygen style annotation comments.</token>
      </line>
      <line no="7">
        <token name="T_COMMENT">### Note: This file possibly includes some PHPUnit comment directives.</token>
      </line>
      <line no="8">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Motley</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9"/>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Checker</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11"/>
      <line no="12">
        <token name="T_COMMENT">/// Routines to support unit test routines.</token>
      </line>
      <line no="13">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="14"/>
      <line no="15">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ERRNO</token>
        <token name="T_WHITESPACE">   </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"errno"</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">   </token>
        <token name="T_COMMENT">///&lt; Error hash key for error level.</token>
      </line>
      <line no="16">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ERRSTR</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"errstr"</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_COMMENT">///&lt; Error hash key for error message.</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ERRFILE</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"errfile"</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">///&lt; Error hash key for source code file.</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ERRLINE</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"errline"</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">///&lt; Error hash key for file line number.</token>
      </line>
      <line no="19"/>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// An array of hash arrays of captured errors.</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Each hash array has the following keys:</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// "errno", "errstr", "errfile", and "errline".</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$capturedErrors</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Keep track of whether the capture error handler is engaged.</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$captureHandlerSet</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// The saved old error handler, if it is replaced.</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$oldErrorHandler</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="28"/>
      <line no="29">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Call a protected or private function in a class under test.</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// This is a unit test helper function.</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $obj - A class object.</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $funcName - The name of the function to call.</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $argArr - Array of function arguments.</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return Whatever the called function returns.</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">invokeFunction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_AMPERSAND">&amp;</token>
        <token name="T_VARIABLE">$obj</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$funcName</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$argArr</token>
        <token name="T_EQUAL">=</token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$reflect</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ReflectionClass</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">get_class</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$obj</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$reflect</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getMethod</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$funcName</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$function</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setAccessible</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$function</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">invokeArgs</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$obj</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$argArr</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="42"/>
      <line no="43">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// An error handler which simply captures the errors.</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $errno - The error level.</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $errstr - The error message.</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $errfile - The error file.</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $errline - The error line.</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return Always returns TRUE.</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">errorHandlerForCapturing</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$errno</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$errstr</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$errfile</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$errline</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$err</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$err</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ERRNO</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE">   </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$errno</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$err</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ERRSTR</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$errstr</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$err</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ERRFILE</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$errfile</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$err</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ERRLINE</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$errline</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_VARIABLE">$capturedErrors</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$err</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="59"/>
      <line no="60">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Set the capture error handler as an active error handler.</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $error_types - AN error level mask for errors calling this handler.</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return Nothing returned.</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">engageCaptureHandler</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$error_types</token>
        <token name="T_EQUAL">=</token>
        <token name="T_STRING">E_ALL</token>
        <token name="T_PIPE">|</token>
        <token name="T_STRING">E_STRICT</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_VARIABLE">$capturedErrors</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="65">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_VARIABLE">$oldErrorHandler</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">set_error_handler</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="66">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"\Motley\UnitTestSupport::errorHandlerForCapturing"</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$error_types</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_VARIABLE">$captureHandlerSet</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="69"/>
      <line no="70">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Disengage the capture handler and restore the original handler.</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return Nothing returned.</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">disengageCaptureHandler</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_VARIABLE">$captureHandlerSet</token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="74">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">restore_error_handler</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="75">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_VARIABLE">$captureHandlerSet</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="78"/>
      <line no="79">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Get all captured errors as an array of hash arrays.</token>
      </line>
      <line no="80">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return An array of hash arrays. Each hash array describes a captured</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// error using "errno", "srrstr", "errfile" and "errline" keys.</token>
      </line>
      <line no="82">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getCapturedErrors</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="83">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_VARIABLE">$capturedErrors</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="85"/>
      <line no="86">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Clear all captured errors.</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return Nothing returned.</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">clearCapturedErrors</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="89">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_VARIABLE">$capturedErrors</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="91"/>
      <line no="92">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">#</token>
      </line>
      <line no="93">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT"># Define non-static properties and functions.</token>
      </line>
      <line no="94">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">#</token>
      </line>
      <line no="95">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tmpRootDir</token>
        <token name="T_WHITESPACE">      </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">         </token>
        <token name="T_COMMENT">///&lt; Root temporary directory.</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tmpDirsCreated</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">      </token>
        <token name="T_COMMENT">///&lt; Temp dirs created in session.</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tmpFilesCreated</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">      </token>
        <token name="T_COMMENT">///&lt; Temp files created in session.</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$chkE</token>
        <token name="T_WHITESPACE">            </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">         </token>
        <token name="T_COMMENT">///&lt; Checker instance for errors.</token>
      </line>
      <line no="99"/>
      <line no="100">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// CLass constructor.</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">tmpRootDir</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DIR">__DIR__</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/../../test/tmp'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">chkE</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Checker</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">E_USER_ERROR</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="104">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="105"/>
      <line no="106">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Set the base temporary directory.</token>
      </line>
      <line no="107">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $rootDir - The absolute path to the root temporary directory.</token>
      </line>
      <line no="108">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setTmpDirRoot</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$rootDir</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="109">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">tmpRootDir</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$rootDir</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="110">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="111"/>
      <line no="112">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Get the base temporary directory.</token>
      </line>
      <line no="113">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return The absolute path to the root temporary directory.</token>
      </line>
      <line no="114">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getTmpDirRoot</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="115">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">tmpRootDir</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="116">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="117"/>
      <line no="118">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Create the root temporary directory if it does not yet exist.</token>
      </line>
      <line no="119">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return The absolute path to the root temporary directory.</token>
      </line>
      <line no="120">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">createTmpRootDir</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="121">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$chk</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">chkE</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="122">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">file_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">tmpRootDir</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="123">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$status</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mkdir</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">tmpRootDir</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="124">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$chk</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">checkNotFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$status</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"mkdir failed."</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">""</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="125">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">tmpDirsCreated</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">tmpRootDir</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="126">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="127">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">tmpRootDir</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="128">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="129"/>
      <line no="130">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Create a temporary subdirectory under the root temporary directory.</token>
      </line>
      <line no="131">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $relSubDir - The optional relative name of the subdirectory.</token>
      </line>
      <line no="132">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// If not specified, a randomly named subdirectory will be created.</token>
      </line>
      <line no="133">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return The absolute path of the created subdirectory.</token>
      </line>
      <line no="134">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">createTmpSubDir</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$relSubDir</token>
        <token name="T_EQUAL">=</token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="135">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$chk</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">chkE</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="136">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_null</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$relSubDir</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="137">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$subDir</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">tmpRootDir</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"/"</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">rand</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="138">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="139">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$subDir</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">tmpRootDir</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"/"</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$relSubDir</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="140">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="141">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$chk</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">checkNotTrue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">file_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$subDir</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_VARIABLE">$subDir</token>
        <token name="T_ENCAPSED_AND_WHITESPACE"> exists.</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">""</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="142">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$status</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mkdir</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$subDir</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="143">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$chk</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">checkNotFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$status</token>
        <token name="T_COMMA">,</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">mkdir </token>
        <token name="T_VARIABLE">$subDir</token>
        <token name="T_ENCAPSED_AND_WHITESPACE"> failed.</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">""</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="144">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">tmpDirsCreated</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$subDir</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="145">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$subDir</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="146">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="147"/>
      <line no="148">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Create a temporary dummy file.</token>
      </line>
      <line no="149">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $filespec - absolute file path for temporary file.</token>
      </line>
      <line no="150">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// However, it must be in a temporary directory we created.</token>
      </line>
      <line no="151">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $dummy - An optional string to be optionally repeated in the file.</token>
      </line>
      <line no="152">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $repeat - The number of times to repeat $dummy.</token>
      </line>
      <line no="153">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return The absolute path of the file created.</token>
      </line>
      <line no="154">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">createTmpDummyFile</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="155">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$filespec</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$dummy</token>
        <token name="T_EQUAL">=</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">""</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$repeat</token>
        <token name="T_EQUAL">=</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="156">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// verify $dir is a dir we created, or the root tempdir.</token>
      </line>
      <line no="157">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$chk</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">chkE</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="158">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$dir</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">dirname</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$filespec</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="159">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$tst</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">in_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$dir</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">tmpDirsCreated</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="160">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$chk</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">checkTrue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$tst</token>
        <token name="T_COMMA">,</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_VARIABLE">$dir</token>
        <token name="T_ENCAPSED_AND_WHITESPACE"> not created during session.</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">""</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="161">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fh</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">fopen</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$filespec</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"w"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="162">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$chk</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">checkNotFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$fh</token>
        <token name="T_COMMA">,</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">fopen </token>
        <token name="T_VARIABLE">$filespec</token>
        <token name="T_ENCAPSED_AND_WHITESPACE"> failed.</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">""</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="163">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">tmpFilesCreated</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$filespec</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="164">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$repeatCnt</token>
        <token name="T_EQUAL">=</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="165">
        <token name="T_WHITESPACE">        </token>
        <token name="T_WHILE">while</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$repeatCnt</token>
        <token name="T_LT">&lt;</token>
        <token name="T_VARIABLE">$repeat</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="166">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$bytes</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">fwrite</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$fh</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$dummy</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="167">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$chk</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">checkNotFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$bytes</token>
        <token name="T_COMMA">,</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">fwrite </token>
        <token name="T_VARIABLE">$filespec</token>
        <token name="T_ENCAPSED_AND_WHITESPACE"> failed.</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">""</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="168">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$repeatCnt</token>
        <token name="T_INC">++</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="169">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="170">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">fclose</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$fh</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="171">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$filespec</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="172">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="173"/>
      <line no="174">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Get the list of temp directories actually created.</token>
      </line>
      <line no="175">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return The list of temp directories actually created.</token>
      </line>
      <line no="176">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getTmpDirsCreated</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="177">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">tmpDirsCreated</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="178">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="179"/>
      <line no="180">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Get the list of temp files actually created.</token>
      </line>
      <line no="181">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return The list of temp files actually created.</token>
      </line>
      <line no="182">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getTmpFilesCreated</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="183">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">tmpFilesCreated</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="184">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="185"/>
      <line no="186">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Delete as much of tmp work as possible.</token>
      </line>
      <line no="187">
        <token name="T_WHITESPACE">    </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">cleanupTmp</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="188">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// try to delete all the tmp files we know about.</token>
      </line>
      <line no="189">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">tmpFilesCreated</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$file</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="190">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">file_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$file</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="191">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$status</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">unlink</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$file</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="192">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="193">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="194">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">tmpFilesCreated</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="195">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// try to completely delete each directory we created.</token>
      </line>
      <line no="196">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$dirs</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_reverse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">tmpDirsCreated</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="197">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$dirs</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$dir</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="198">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">file_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$dir</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="199">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">recursiveRmdir</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$dir</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="200">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="201">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="202">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">tmpDirsCreated</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="203">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="204"/>
      <line no="205">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Recursively delete a directory and all contents.</token>
      </line>
      <line no="206">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $path - The top level directory to remove.</token>
      </line>
      <line no="207">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">recursiveRmdir</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="208">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">file_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_RETURN">return</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="209">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$files</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">glob</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/*'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="210">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$files</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$file</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="211">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_dir</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$file</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="212">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">recursiveRmdir</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$file</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="213">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="214">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">unlink</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$file</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="215">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="216">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="217">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">rmdir</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="218">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="219"/>
      <line no="220">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="221">
        <token name="T_CLOSE_TAG">?&gt;</token>
      </line>
      <line no="222"/>
    </source>
  </file>
</phpunit>
