<?xml version="1.0"?>
<phpunit xmlns="http://schema.phpunit.de/coverage/1.0">
  <file name="Command.php" path="/">
    <totals>
      <lines total="284" comments="106" code="178" executable="142" executed="100" percent="70.42"/>
      <methods count="18" tested="15" percent="83.33"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="Command" start="19" executable="142" executed="100" crap="104.16">
      <package full="" name="" sub="" category=""/>
      <namespace name="Motley"/>
      <method name="__construct" signature="__construct(string $name=null, string $desc=null)" start="32" end="41" crap="3" executable="7" executed="7" coverage="100"/>
      <method name="setName" signature="setName(string $name)" start="45" end="47" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="getName" signature="getName() : string" start="51" end="53" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="setDescription" signature="setDescription(string $desc)" start="57" end="59" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="getDescription" signature="getDescription() : string" start="63" end="65" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="setDisplayName" signature="setDisplayName(string $name)" start="69" end="71" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="getDisplayName" signature="getDisplayName() : string" start="76" end="82" crap="2" executable="4" executed="4" coverage="100"/>
      <method name="setArgv" signature="setArgv(array $cmdv=array())" start="87" end="98" crap="3.71" executable="7" executed="4" coverage="57.142857142857"/>
      <method name="getArgv" signature="getArgv()" start="102" end="104" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="addArrangement" signature="addArrangement(CommandArrange $arrange)" start="108" end="110" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="getArrangements" signature="getArrangements() : array" start="114" end="116" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="clearArrangements" signature="clearArrangements()" start="119" end="121" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="getMessenger" signature="getMessenger() : CommandMessenger" start="124" end="129" crap="2" executable="3" executed="3" coverage="100"/>
      <method name="getUsageFormatter" signature="getUsageFormatter() : UsageFormatter" start="132" end="137" crap="2" executable="3" executed="3" coverage="100"/>
      <method name="getHelp" signature="getHelp() : string" start="140" end="248" crap="47.10" executable="89" executed="51" coverage="57.303370786517"/>
      <method name="displayHelp" signature="displayHelp()" start="252" end="254" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="parse" signature="parse() : array" start="258" end="268" crap="3" executable="7" executed="7" coverage="100"/>
      <method name="run" signature="run(bool $exit=true) : int" start="273" end="282" crap="3.04" executable="6" executed="5" coverage="83.333333333333"/>
    </class>
    <coverage>
      <line nr="33">
        <covered by="Motley\Test\CommandDemoTest::testNew"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testNew"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testSetGetName"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testSetGetDescription"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testSetGetDisplayName"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testAddGetClearArrangements"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testGetMessenger"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testParse"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testRun"/>
      </line>
      <line nr="34">
        <covered by="Motley\Test\CommandDemoTest::testNew"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testNew"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testSetGetName"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testSetGetDescription"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testSetGetDisplayName"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testAddGetClearArrangements"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testGetMessenger"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testParse"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testRun"/>
      </line>
      <line nr="35">
        <covered by="Motley\Test\CommandDemoTest::testNew"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testNew"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testSetGetName"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testSetGetDescription"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testSetGetDisplayName"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testAddGetClearArrangements"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testGetMessenger"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testParse"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testRun"/>
      </line>
      <line nr="36">
        <covered by="Motley\Test\CommandDemoTest::testNew"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testNew"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testSetGetName"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testSetGetDescription"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testSetGetDisplayName"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testAddGetClearArrangements"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testGetMessenger"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testParse"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testRun"/>
      </line>
      <line nr="38">
        <covered by="Motley\Test\CommandDemoTest::testNew"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testNew"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testSetGetName"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testSetGetDescription"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testSetGetDisplayName"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testAddGetClearArrangements"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testGetMessenger"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testParse"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testRun"/>
      </line>
      <line nr="39">
        <covered by="Motley\Test\CommandDemoTest::testNew"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testNew"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testSetGetDescription"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testGetMessenger"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testParse"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testRun"/>
      </line>
      <line nr="41">
        <covered by="Motley\Test\CommandDemoTest::testNew"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testNew"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testSetGetName"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testSetGetDescription"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testSetGetDisplayName"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testAddGetClearArrangements"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testGetMessenger"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testParse"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testRun"/>
      </line>
      <line nr="46">
        <covered by="Motley\Test\T222_MotleyCommandTest::testSetGetName"/>
      </line>
      <line nr="47">
        <covered by="Motley\Test\T222_MotleyCommandTest::testSetGetName"/>
      </line>
      <line nr="52">
        <covered by="Motley\Test\T222_MotleyCommandTest::testSetGetName"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testRun"/>
      </line>
      <line nr="58">
        <covered by="Motley\Test\T222_MotleyCommandTest::testSetGetDescription"/>
      </line>
      <line nr="59">
        <covered by="Motley\Test\T222_MotleyCommandTest::testSetGetDescription"/>
      </line>
      <line nr="64">
        <covered by="Motley\Test\T222_MotleyCommandTest::testSetGetDescription"/>
      </line>
      <line nr="70">
        <covered by="Motley\Test\T222_MotleyCommandTest::testSetGetDisplayName"/>
      </line>
      <line nr="71">
        <covered by="Motley\Test\T222_MotleyCommandTest::testSetGetDisplayName"/>
      </line>
      <line nr="77">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testSetGetDisplayName"/>
      </line>
      <line nr="78">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testSetGetDisplayName"/>
      </line>
      <line nr="79">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testSetGetDisplayName"/>
      </line>
      <line nr="81">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testSetGetDisplayName"/>
      </line>
      <line nr="88">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testRun"/>
      </line>
      <line nr="89">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testRun"/>
      </line>
      <line nr="96">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testRun"/>
      </line>
      <line nr="98">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testRun"/>
      </line>
      <line nr="103">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
      </line>
      <line nr="109">
        <covered by="Motley\Test\CommandDemoTest::testNew"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testAddGetClearArrangements"/>
      </line>
      <line nr="110">
        <covered by="Motley\Test\CommandDemoTest::testNew"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testAddGetClearArrangements"/>
      </line>
      <line nr="115">
        <covered by="Motley\Test\T222_MotleyCommandTest::testAddGetClearArrangements"/>
      </line>
      <line nr="120">
        <covered by="Motley\Test\T222_MotleyCommandTest::testAddGetClearArrangements"/>
      </line>
      <line nr="121">
        <covered by="Motley\Test\T222_MotleyCommandTest::testAddGetClearArrangements"/>
      </line>
      <line nr="125">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testGetMessenger"/>
      </line>
      <line nr="126">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testGetMessenger"/>
      </line>
      <line nr="128">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testGetMessenger"/>
      </line>
      <line nr="133">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testGetMessenger"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
      </line>
      <line nr="134">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testGetMessenger"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
      </line>
      <line nr="136">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testGetMessenger"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
      </line>
      <line nr="141">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
      </line>
      <line nr="142">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
      </line>
      <line nr="143">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
      </line>
      <line nr="144">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
      </line>
      <line nr="145">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
      </line>
      <line nr="146">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
      </line>
      <line nr="147">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
      </line>
      <line nr="148">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
      </line>
      <line nr="149">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
      </line>
      <line nr="150">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
      </line>
      <line nr="151">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
      </line>
      <line nr="152">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
      </line>
      <line nr="153">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
      </line>
      <line nr="154">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
      </line>
      <line nr="155">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
      </line>
      <line nr="156">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
      </line>
      <line nr="157">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
      </line>
      <line nr="158">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
      </line>
      <line nr="159">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
      </line>
      <line nr="160">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
      </line>
      <line nr="161">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
      </line>
      <line nr="162">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
      </line>
      <line nr="163">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
      </line>
      <line nr="164">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
      </line>
      <line nr="165">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
      </line>
      <line nr="166">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
      </line>
      <line nr="167">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
      </line>
      <line nr="168">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
      </line>
      <line nr="169">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
      </line>
      <line nr="170">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
      </line>
      <line nr="180">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
      </line>
      <line nr="181">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
      </line>
      <line nr="182">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
      </line>
      <line nr="183">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
      </line>
      <line nr="186">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
      </line>
      <line nr="199">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
      </line>
      <line nr="202">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
      </line>
      <line nr="205">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
      </line>
      <line nr="217">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
      </line>
      <line nr="234">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
      </line>
      <line nr="235">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
      </line>
      <line nr="236">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
      </line>
      <line nr="237">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
      </line>
      <line nr="238">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
      </line>
      <line nr="239">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
      </line>
      <line nr="240">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
      </line>
      <line nr="241">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
      </line>
      <line nr="242">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
      </line>
      <line nr="243">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
      </line>
      <line nr="244">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
      </line>
      <line nr="247">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
      </line>
      <line nr="253">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
      </line>
      <line nr="254">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testHelp"/>
      </line>
      <line nr="259">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testParse"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testRun"/>
      </line>
      <line nr="260">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testParse"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testRun"/>
      </line>
      <line nr="261">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testParse"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testRun"/>
      </line>
      <line nr="262">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
      </line>
      <line nr="263">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
      </line>
      <line nr="264">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
      </line>
      <line nr="267">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testParse"/>
        <covered by="Motley\Test\T222_MotleyCommandTest::testRun"/>
      </line>
      <line nr="274">
        <covered by="Motley\Test\T222_MotleyCommandTest::testRun"/>
      </line>
      <line nr="275">
        <covered by="Motley\Test\T222_MotleyCommandTest::testRun"/>
      </line>
      <line nr="276">
        <covered by="Motley\Test\T222_MotleyCommandTest::testRun"/>
      </line>
      <line nr="279">
        <covered by="Motley\Test\T222_MotleyCommandTest::testRun"/>
      </line>
      <line nr="281">
        <covered by="Motley\Test\T222_MotleyCommandTest::testRun"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_COMMENT">/// Source code file for the Motley::Command class.</token>
      </line>
      <line no="3">
        <token name="T_COMMENT">/// @copyright Copyright (c) 2017, Eric Alan Christiansen.\n</token>
      </line>
      <line no="4">
        <token name="T_COMMENT">/// MIT License. See &lt;https://opensource.org/licenses/MIT&gt;.</token>
      </line>
      <line no="5">
        <token name="T_COMMENT">/// @file</token>
      </line>
      <line no="6">
        <token name="T_COMMENT">### Note: This file uses Uses doxygen style annotation comments.</token>
      </line>
      <line no="7">
        <token name="T_COMMENT">### Note: This file possibly includes some PHPUnit comment directives.</token>
      </line>
      <line no="8">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Motley</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9"/>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">CommandArg</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">CommandOpt</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">CommandOptGrp</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">CommandDoubleDash</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="14">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">CommandArrange</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="15">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">CommandMessenger</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="16">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">UsageFormatter</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="17"/>
      <line no="18">
        <token name="T_COMMENT">/// Represent a command line option.</token>
      </line>
      <line no="19">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Command</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="20"/>
      <line no="21">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_WHITESPACE">             </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">""</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">///&lt; Command name.</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$description</token>
        <token name="T_WHITESPACE">      </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">""</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">///&lt; Command description.</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$arrangements</token>
        <token name="T_WHITESPACE">     </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">   </token>
        <token name="T_COMMENT">///&lt; Command opt/arg layouts.</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$displayName</token>
        <token name="T_WHITESPACE">      </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">""</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">///&lt; Command display name.</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$userMessenger</token>
        <token name="T_WHITESPACE">    </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">      </token>
        <token name="T_COMMENT">///&lt; CommandMessage object instance.</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$formatter</token>
        <token name="T_WHITESPACE">        </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">      </token>
        <token name="T_COMMENT">///&lt; UsageFormatter instance.</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$argv</token>
        <token name="T_WHITESPACE">             </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">      </token>
        <token name="T_COMMENT">///&lt; Initialized to global $argv.</token>
      </line>
      <line no="28"/>
      <line no="29">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Class instance constructor.</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $name - Command instance name.</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $desc - Command description.</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_EQUAL">=</token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$desc</token>
        <token name="T_EQUAL">=</token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">        </token>
        <token name="T_GLOBAL">global</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$argv</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">argv</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$argv</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">is_null</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">name</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">is_null</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$desc</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">description</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$desc</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="42"/>
      <line no="43">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Set the command name.</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $name - the command name.</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">name</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="48"/>
      <line no="49">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Get the command name.</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return the current command name.</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">name</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="54"/>
      <line no="55">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Set the command description.</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $desc - the command description.</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setDescription</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$desc</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">description</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$desc</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="60"/>
      <line no="61">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Get the command description.</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return the current command description.</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getDescription</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">description</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="65">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="66"/>
      <line no="67">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Set the command display name for syntax help and so forth.</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $name - The command display name.</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setDisplayName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">displayName</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="72"/>
      <line no="73">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Get the command display name for syntax help and so forth.</token>
      </line>
      <line no="74">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @returns The previously set display name, or the general name</token>
      </line>
      <line no="75">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">///   if display name has not been explicitly set.</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getDisplayName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">displayName</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="78">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_EQUAL">==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">""</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">name</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="80">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="82">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="83"/>
      <line no="84">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Set what the Command object uses as command line parameters.</token>
      </line>
      <line no="85">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Note that this is initialized to the global $argv array during instantiation.</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $cmdv - An array of script name followed by command arguments.</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setArgv</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$cmdv</token>
        <token name="T_EQUAL">=</token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">        </token>
        <token name="T_GLOBAL">global</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$argv</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="89">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$cmdv</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_IS_EQUAL">==</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$argv</token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="91">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">argv</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$argv</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="92">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="93">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">argv</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDisplayName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="94">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="95">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">argv</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$cmdv</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="99"/>
      <line no="100">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Get what the Command object is using as command line arguments.</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return As array of script name followed by command line arguments.</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getArgv</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">argv</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="104">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="105"/>
      <line no="106">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Add command arrangement of option groups and arguments.</token>
      </line>
      <line no="107">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $arrange - The command arrangement.</token>
      </line>
      <line no="108">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">addArrangement</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">CommandArrange</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$arrange</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="109">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">arrangements</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$arrange</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="110">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="111"/>
      <line no="112">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Get all command arrangements.</token>
      </line>
      <line no="113">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @returns All command arrangements.</token>
      </line>
      <line no="114">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getArrangements</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="115">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">arrangements</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="116">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="117"/>
      <line no="118">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Clear all command arrangements.</token>
      </line>
      <line no="119">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">clearArrangements</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="120">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">arrangements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="121">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="122"/>
      <line no="123">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Get the user messenger object.</token>
      </line>
      <line no="124">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getMessenger</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandMessenger</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="125">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_null</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">userMessenger</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="126">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">userMessenger</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandMessenger</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="127">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="128">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">userMessenger</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="129">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="130"/>
      <line no="131">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Get the usage formatter object.</token>
      </line>
      <line no="132">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getUsageFormatter</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UsageFormatter</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="133">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_null</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatter</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="134">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatter</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UsageFormatter</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="135">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="136">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatter</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="137">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="138"/>
      <line no="139">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Get textual help information.</token>
      </line>
      <line no="140">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getHelp</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="141">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$masterArgList</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="142">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$masterOptList</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="143">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$masterOptGrpList</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="144">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getUsageFormatter</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="145">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">clear</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="146">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$colWidth</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getColumnWidth</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="147">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$descCol</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INT_CAST">(int)</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$colWidth</token>
        <token name="T_DIV">/</token>
        <token name="T_LNUMBER">3</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="148">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$descCol</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">min</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$descCol</token>
        <token name="T_COMMA">,</token>
        <token name="T_LNUMBER">40</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="149">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$descCol</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">max</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$descCol</token>
        <token name="T_COMMA">,</token>
        <token name="T_LNUMBER">4</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="150">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setLeftIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="151">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setRightIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="152">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setContinueIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="153">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatChunk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Name:"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="154">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatBreak</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="155">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setLeftIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="156">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatChunk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">name</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">" -"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="157">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatText</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">description</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="158">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatBreak</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="159">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setLeftIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="160">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatChunk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Usage:"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="161">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatBreak</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="162">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setLeftIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="163">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">arrangements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$arrangement</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="164">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatChunk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDisplayName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="165">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$aComps</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$arrangement</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getArranComps</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="166">
        <token name="T_WHITESPACE">            </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$aComps</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$aComp</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="167">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$aComp</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getCompObj</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="168">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$isOpt</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$aComp</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getIsOptional</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="169">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$isRep</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$aComp</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getIsRepeatable</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="170">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_a</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"\Motley\CommandArg"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="171">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$masterArgList</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="172">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$argString</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDisplayName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="173">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$isRep</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="174">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_VARIABLE">$argString</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONCAT_EQUAL">.=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">" ..."</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="175">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="176">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$isOpt</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="177">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_VARIABLE">$argString</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'['</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$argString</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">']'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="178">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="179">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatChunk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$argString</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="180">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_a</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"\Motley\CommandOpt"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="181">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$masterOptList</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="182">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$switchesString</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getSwitchesString</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="183">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$isOpt</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="184">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_VARIABLE">$switchesString</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'['</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$switchesString</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">']'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="185">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="186">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatChunk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$switchesString</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="187">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_a</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"\Motley\CommandOptGrp"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="188">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$masterOptGrpList</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="189">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$grpString</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDisplayName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="190">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$isOpt</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="191">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_VARIABLE">$grpString</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'['</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$grpString</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">']'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="192">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="193">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatChunk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$grpString</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="194">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_a</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"\Motley\CommandDoubleDash"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="195">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$ddString</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDisplayName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="196">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$isOpt</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="197">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_VARIABLE">$ddString</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'['</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$ddString</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">']'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="198">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="199">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatChunk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$ddString</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="200">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="201">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="202">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatBreak</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="203">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="204">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># output argument help (if any)</token>
      </line>
      <line no="205">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$masterArgList</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_GT">&gt;</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="206">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setLeftIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="207">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatChunk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Arguments:"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="208">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatBreak</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="209">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setLeftIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="210">
        <token name="T_WHITESPACE">            </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$masterArgList</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$arg</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="211">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatChunk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDisplayName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="212">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatText</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDescription</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$descCol</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="213">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatBreak</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="214">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="215">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="216">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># output option group help (if any)</token>
      </line>
      <line no="217">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$masterOptGrpList</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_GT">&gt;</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="218">
        <token name="T_WHITESPACE">            </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$masterOptGrpList</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$optGrp</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="219">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setLeftIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="220">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatChunk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$optGrp</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDisplayName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">":"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="221">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatBreak</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="222">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setLeftIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="223">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$opts</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$optGrp</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOptions</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="224">
        <token name="T_WHITESPACE">                </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$opts</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$opt</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="225">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$switchesString</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$opt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getSwitchesString</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="226">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatChunk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$switchesString</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="227">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$desc</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$opt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDescription</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="228">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatText</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$desc</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$descCol</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="229">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatBreak</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="230">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="231">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="232">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="233">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># output options not in an option group</token>
      </line>
      <line no="234">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$masterOptList</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_GT">&gt;</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="235">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setLeftIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="236">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatChunk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"OtherOptions:"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="237">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatBreak</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="238">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setLeftIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="239">
        <token name="T_WHITESPACE">            </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$masterOptList</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$opt</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="240">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$switchesString</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$opt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getSwitchesString</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="241">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatChunk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$switchesString</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="242">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$desc</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$opt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDescription</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="243">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatText</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$desc</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$descCol</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="244">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatBreak</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="245">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="246">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="247">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getFormattedText</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="248">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="249"/>
      <line no="250">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Display help information to standard output.</token>
      </line>
      <line no="251">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// See Motley::Command::getHelp for legal values.</token>
      </line>
      <line no="252">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">displayHelp</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="253">
        <token name="T_WHITESPACE">        </token>
        <token name="T_ECHO">echo</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getHelp</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="254">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="255"/>
      <line no="256">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Try to parse all defined arrangements against command line arguments.</token>
      </line>
      <line no="257">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return An array of arrangements that match command line arguments.</token>
      </line>
      <line no="258">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">parse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="259">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$argv</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">argv</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="260">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="261">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">arrangements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$arrangement</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="262">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$matched</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$arrangement</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">parse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$argv</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="263">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$matched</token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="264">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$arrangement</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="265">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="266">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="267">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="268">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="269"/>
      <line no="270">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Run a command using command line arguments.</token>
      </line>
      <line no="271">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $exit - If TRUE, the function exits the program with a statcode.</token>
      </line>
      <line no="272">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return The final status code integer value, unless $exit.</token>
      </line>
      <line no="273">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">run</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$exit</token>
        <token name="T_EQUAL">=</token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="274">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$argv</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">argv</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="275">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$matches</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">parse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$argv</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="276">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$matches</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_GT">&gt;</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="277">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$statcode</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="278">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="279">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$statcode</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="280">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="281">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$exit</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXIT">exit</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$statcode</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$statcode</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="282">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="283">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="284">
        <token name="T_CLOSE_TAG">?&gt;</token>
      </line>
      <line no="285"/>
    </source>
  </file>
</phpunit>
