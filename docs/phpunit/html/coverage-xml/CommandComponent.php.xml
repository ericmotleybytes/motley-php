<?xml version="1.0"?>
<phpunit xmlns="http://schema.phpunit.de/coverage/1.0">
  <file name="CommandComponent.php" path="/">
    <totals>
      <lines total="152" comments="108" code="44" executable="40" executed="40" percent="100.00"/>
      <methods count="15" tested="15" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="CommandComponent" start="13" executable="40" executed="40" crap="21">
      <package full="" name="" sub="" category=""/>
      <namespace name="Motley"/>
      <method name="__construct" signature="__construct(string $name=null, string $desc=null)" start="28" end="37" crap="3" executable="7" executed="7" coverage="100"/>
      <method name="getName" signature="getName() : string" start="41" end="43" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="setName" signature="setName(string $name)" start="47" end="49" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="getDescription" signature="getDescription() : string" start="53" end="55" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="setDescription" signature="setDescription(string $desc)" start="59" end="61" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="getDisplayName" signature="getDisplayName() : string" start="65" end="71" crap="2" executable="3" executed="3" coverage="100"/>
      <method name="setDisplayName" signature="setDisplayName($dispName)" start="75" end="77" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="saveLastParam" signature="saveLastParam($param, bool $isValid, string $message)" start="83" end="92" crap="2" executable="7" executed="7" coverage="100"/>
      <method name="getLastParamValue" signature="getLastParamValue()" start="96" end="98" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getLastParamIsValid" signature="getLastParamIsValid() : bool" start="102" end="104" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getLastParamMessage" signature="getLastParamMessage() : string" start="108" end="110" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="validate" signature="validate(string $param) : bool" start="115" end="120" crap="1" executable="4" executed="4" coverage="100"/>
      <method name="getValidParamHistory" signature="getValidParamHistory()" start="124" end="126" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="resetValidParamHistory" signature="resetValidParamHistory()" start="129" end="131" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="findComponentByName" signature="findComponentByName(string $name, array $components) : array" start="141" end="149" crap="3" executable="5" executed="5" coverage="100"/>
    </class>
    <coverage>
      <line nr="29">
        <covered by="Motley\Test\CommandArgTest::testNew"/>
        <covered by="Motley\Test\CommandArgTest::testGetDisplayName"/>
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
        <covered by="Motley\Test\CommandArgTest::testSetGetIsFile"/>
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
        <covered by="Motley\Test\CommandArgTest::testGoodCheckRegEx"/>
        <covered by="Motley\Test\CommandArgTest::testBadCheckRegEx"/>
        <covered by="Motley\Test\CommandArgTest::testValidate"/>
        <covered by="Motley\Test\CommandArgTest::testSetGetDisplayName"/>
        <covered by="Motley\Test\CommandArgTest::testSetGetDefaultValue"/>
        <covered by="Motley\Test\CommandArrangeCompTest::testNewGet"/>
        <covered by="Motley\Test\CommandArrangeCompTest::testGetIsFulfilled"/>
        <covered by="Motley\Test\CommandArrangeTest::testDefineGetClearArrangement"/>
        <covered by="Motley\Test\CommandComponentTest::testNew"/>
        <covered by="Motley\Test\CommandComponentTest::testSetGetName"/>
        <covered by="Motley\Test\CommandComponentTest::testSetGetDescription"/>
        <covered by="Motley\Test\CommandComponentTest::testSetGetDisplayName"/>
        <covered by="Motley\Test\CommandComponentTest::testSaveLastParam"/>
        <covered by="Motley\Test\CommandComponentTest::testValiateGetLastParam"/>
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
        <covered by="Motley\Test\CommandComponentTest::testFindComponentByName"/>
        <covered by="Motley\Test\CommandDemoTest::testNew"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandDoubleDashTest::testNewDoubleDash"/>
        <covered by="Motley\Test\CommandDoubleDashTest::testGet"/>
        <covered by="Motley\Test\CommandDoubleDashTest::testValidate"/>
        <covered by="Motley\Test\CommandOptGrpTest::testNew"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testNew"/>
        <covered by="Motley\Test\CommandOptTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptTest::testSetGetOptArg"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="30">
        <covered by="Motley\Test\CommandArgTest::testNew"/>
        <covered by="Motley\Test\CommandArgTest::testGetDisplayName"/>
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
        <covered by="Motley\Test\CommandArgTest::testSetGetIsFile"/>
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
        <covered by="Motley\Test\CommandArgTest::testGoodCheckRegEx"/>
        <covered by="Motley\Test\CommandArgTest::testBadCheckRegEx"/>
        <covered by="Motley\Test\CommandArgTest::testValidate"/>
        <covered by="Motley\Test\CommandArgTest::testSetGetDisplayName"/>
        <covered by="Motley\Test\CommandArgTest::testSetGetDefaultValue"/>
        <covered by="Motley\Test\CommandArrangeCompTest::testNewGet"/>
        <covered by="Motley\Test\CommandArrangeCompTest::testGetIsFulfilled"/>
        <covered by="Motley\Test\CommandArrangeTest::testDefineGetClearArrangement"/>
        <covered by="Motley\Test\CommandComponentTest::testNew"/>
        <covered by="Motley\Test\CommandComponentTest::testSetGetName"/>
        <covered by="Motley\Test\CommandComponentTest::testSetGetDescription"/>
        <covered by="Motley\Test\CommandComponentTest::testSetGetDisplayName"/>
        <covered by="Motley\Test\CommandComponentTest::testSaveLastParam"/>
        <covered by="Motley\Test\CommandComponentTest::testValiateGetLastParam"/>
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
        <covered by="Motley\Test\CommandComponentTest::testFindComponentByName"/>
        <covered by="Motley\Test\CommandDemoTest::testNew"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandDoubleDashTest::testNewDoubleDash"/>
        <covered by="Motley\Test\CommandDoubleDashTest::testGet"/>
        <covered by="Motley\Test\CommandDoubleDashTest::testValidate"/>
        <covered by="Motley\Test\CommandOptGrpTest::testNew"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testNew"/>
        <covered by="Motley\Test\CommandOptTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptTest::testSetGetOptArg"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="32">
        <covered by="Motley\Test\CommandArgTest::testNew"/>
        <covered by="Motley\Test\CommandArgTest::testGetDisplayName"/>
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
        <covered by="Motley\Test\CommandArgTest::testSetGetIsFile"/>
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
        <covered by="Motley\Test\CommandArgTest::testGoodCheckRegEx"/>
        <covered by="Motley\Test\CommandArgTest::testBadCheckRegEx"/>
        <covered by="Motley\Test\CommandArgTest::testValidate"/>
        <covered by="Motley\Test\CommandArgTest::testSetGetDisplayName"/>
        <covered by="Motley\Test\CommandArgTest::testSetGetDefaultValue"/>
        <covered by="Motley\Test\CommandArrangeCompTest::testNewGet"/>
        <covered by="Motley\Test\CommandArrangeCompTest::testGetIsFulfilled"/>
        <covered by="Motley\Test\CommandArrangeTest::testDefineGetClearArrangement"/>
        <covered by="Motley\Test\CommandComponentTest::testNew"/>
        <covered by="Motley\Test\CommandComponentTest::testSetGetName"/>
        <covered by="Motley\Test\CommandComponentTest::testSetGetDescription"/>
        <covered by="Motley\Test\CommandComponentTest::testSetGetDisplayName"/>
        <covered by="Motley\Test\CommandComponentTest::testSaveLastParam"/>
        <covered by="Motley\Test\CommandComponentTest::testValiateGetLastParam"/>
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
        <covered by="Motley\Test\CommandComponentTest::testFindComponentByName"/>
        <covered by="Motley\Test\CommandDemoTest::testNew"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandDoubleDashTest::testNewDoubleDash"/>
        <covered by="Motley\Test\CommandDoubleDashTest::testGet"/>
        <covered by="Motley\Test\CommandDoubleDashTest::testValidate"/>
        <covered by="Motley\Test\CommandOptGrpTest::testNew"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testNew"/>
        <covered by="Motley\Test\CommandOptTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptTest::testSetGetOptArg"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="33">
        <covered by="Motley\Test\CommandArgTest::testNew"/>
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
        <covered by="Motley\Test\CommandArgTest::testSetGetIsFile"/>
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
        <covered by="Motley\Test\CommandArgTest::testGoodCheckRegEx"/>
        <covered by="Motley\Test\CommandArgTest::testBadCheckRegEx"/>
        <covered by="Motley\Test\CommandArgTest::testValidate"/>
        <covered by="Motley\Test\CommandArrangeTest::testDefineGetClearArrangement"/>
        <covered by="Motley\Test\CommandComponentTest::testNew"/>
        <covered by="Motley\Test\CommandComponentTest::testSetGetDescription"/>
        <covered by="Motley\Test\CommandComponentTest::testSaveLastParam"/>
        <covered by="Motley\Test\CommandComponentTest::testValiateGetLastParam"/>
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
        <covered by="Motley\Test\CommandDemoTest::testNew"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandDoubleDashTest::testNewDoubleDash"/>
        <covered by="Motley\Test\CommandDoubleDashTest::testGet"/>
        <covered by="Motley\Test\CommandDoubleDashTest::testValidate"/>
        <covered by="Motley\Test\CommandOptGrpTest::testNew"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testNew"/>
        <covered by="Motley\Test\CommandOptTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptTest::testSetGetOptArg"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="35">
        <covered by="Motley\Test\CommandArgTest::testNew"/>
        <covered by="Motley\Test\CommandArgTest::testGetDisplayName"/>
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
        <covered by="Motley\Test\CommandArgTest::testSetGetIsFile"/>
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
        <covered by="Motley\Test\CommandArgTest::testGoodCheckRegEx"/>
        <covered by="Motley\Test\CommandArgTest::testBadCheckRegEx"/>
        <covered by="Motley\Test\CommandArgTest::testValidate"/>
        <covered by="Motley\Test\CommandArgTest::testSetGetDisplayName"/>
        <covered by="Motley\Test\CommandArgTest::testSetGetDefaultValue"/>
        <covered by="Motley\Test\CommandArrangeCompTest::testNewGet"/>
        <covered by="Motley\Test\CommandArrangeCompTest::testGetIsFulfilled"/>
        <covered by="Motley\Test\CommandArrangeTest::testDefineGetClearArrangement"/>
        <covered by="Motley\Test\CommandComponentTest::testNew"/>
        <covered by="Motley\Test\CommandComponentTest::testSetGetName"/>
        <covered by="Motley\Test\CommandComponentTest::testSetGetDescription"/>
        <covered by="Motley\Test\CommandComponentTest::testSetGetDisplayName"/>
        <covered by="Motley\Test\CommandComponentTest::testSaveLastParam"/>
        <covered by="Motley\Test\CommandComponentTest::testValiateGetLastParam"/>
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
        <covered by="Motley\Test\CommandComponentTest::testFindComponentByName"/>
        <covered by="Motley\Test\CommandDemoTest::testNew"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandDoubleDashTest::testNewDoubleDash"/>
        <covered by="Motley\Test\CommandDoubleDashTest::testGet"/>
        <covered by="Motley\Test\CommandDoubleDashTest::testValidate"/>
        <covered by="Motley\Test\CommandOptGrpTest::testNew"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testNew"/>
        <covered by="Motley\Test\CommandOptTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptTest::testSetGetOptArg"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="36">
        <covered by="Motley\Test\CommandArgTest::testNew"/>
        <covered by="Motley\Test\CommandArgTest::testGetDisplayName"/>
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
        <covered by="Motley\Test\CommandArgTest::testSetGetIsFile"/>
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
        <covered by="Motley\Test\CommandArgTest::testGoodCheckRegEx"/>
        <covered by="Motley\Test\CommandArgTest::testBadCheckRegEx"/>
        <covered by="Motley\Test\CommandArgTest::testValidate"/>
        <covered by="Motley\Test\CommandArgTest::testSetGetDisplayName"/>
        <covered by="Motley\Test\CommandArgTest::testSetGetDefaultValue"/>
        <covered by="Motley\Test\CommandArrangeCompTest::testNewGet"/>
        <covered by="Motley\Test\CommandArrangeCompTest::testGetIsFulfilled"/>
        <covered by="Motley\Test\CommandArrangeTest::testDefineGetClearArrangement"/>
        <covered by="Motley\Test\CommandComponentTest::testNew"/>
        <covered by="Motley\Test\CommandComponentTest::testSetGetName"/>
        <covered by="Motley\Test\CommandComponentTest::testSetGetDescription"/>
        <covered by="Motley\Test\CommandComponentTest::testSetGetDisplayName"/>
        <covered by="Motley\Test\CommandComponentTest::testSaveLastParam"/>
        <covered by="Motley\Test\CommandComponentTest::testValiateGetLastParam"/>
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
        <covered by="Motley\Test\CommandComponentTest::testFindComponentByName"/>
        <covered by="Motley\Test\CommandDemoTest::testNew"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandDoubleDashTest::testNewDoubleDash"/>
        <covered by="Motley\Test\CommandDoubleDashTest::testGet"/>
        <covered by="Motley\Test\CommandDoubleDashTest::testValidate"/>
        <covered by="Motley\Test\CommandOptGrpTest::testNew"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testNew"/>
        <covered by="Motley\Test\CommandOptTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptTest::testSetGetOptArg"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="37">
        <covered by="Motley\Test\CommandArgTest::testNew"/>
        <covered by="Motley\Test\CommandArgTest::testGetDisplayName"/>
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
        <covered by="Motley\Test\CommandArgTest::testSetGetIsFile"/>
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
        <covered by="Motley\Test\CommandArgTest::testGoodCheckRegEx"/>
        <covered by="Motley\Test\CommandArgTest::testBadCheckRegEx"/>
        <covered by="Motley\Test\CommandArgTest::testValidate"/>
        <covered by="Motley\Test\CommandArgTest::testSetGetDisplayName"/>
        <covered by="Motley\Test\CommandArgTest::testSetGetDefaultValue"/>
        <covered by="Motley\Test\CommandArrangeCompTest::testNewGet"/>
        <covered by="Motley\Test\CommandArrangeCompTest::testGetIsFulfilled"/>
        <covered by="Motley\Test\CommandArrangeTest::testDefineGetClearArrangement"/>
        <covered by="Motley\Test\CommandComponentTest::testNew"/>
        <covered by="Motley\Test\CommandComponentTest::testSetGetName"/>
        <covered by="Motley\Test\CommandComponentTest::testSetGetDescription"/>
        <covered by="Motley\Test\CommandComponentTest::testSetGetDisplayName"/>
        <covered by="Motley\Test\CommandComponentTest::testSaveLastParam"/>
        <covered by="Motley\Test\CommandComponentTest::testValiateGetLastParam"/>
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
        <covered by="Motley\Test\CommandComponentTest::testFindComponentByName"/>
        <covered by="Motley\Test\CommandDemoTest::testNew"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandDoubleDashTest::testNewDoubleDash"/>
        <covered by="Motley\Test\CommandDoubleDashTest::testGet"/>
        <covered by="Motley\Test\CommandDoubleDashTest::testValidate"/>
        <covered by="Motley\Test\CommandOptGrpTest::testNew"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testNew"/>
        <covered by="Motley\Test\CommandOptTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptTest::testSetGetOptArg"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="42">
        <covered by="Motley\Test\CommandArgTest::testGetDisplayName"/>
        <covered by="Motley\Test\CommandArgTest::testSetGetDisplayName"/>
        <covered by="Motley\Test\CommandArrangeTest::testDefineGetClearArrangement"/>
        <covered by="Motley\Test\CommandComponentTest::testSetGetName"/>
        <covered by="Motley\Test\CommandComponentTest::testFindComponentByName"/>
        <covered by="Motley\Test\CommandDoubleDashTest::testGet"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
      </line>
      <line nr="48">
        <covered by="Motley\Test\CommandComponentTest::testSetGetName"/>
      </line>
      <line nr="49">
        <covered by="Motley\Test\CommandComponentTest::testSetGetName"/>
      </line>
      <line nr="54">
        <covered by="Motley\Test\CommandComponentTest::testSetGetDescription"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDoubleDashTest::testGet"/>
      </line>
      <line nr="60">
        <covered by="Motley\Test\CommandComponentTest::testSetGetDescription"/>
        <covered by="Motley\Test\CommandDoubleDashTest::testGet"/>
      </line>
      <line nr="61">
        <covered by="Motley\Test\CommandComponentTest::testSetGetDescription"/>
        <covered by="Motley\Test\CommandDoubleDashTest::testGet"/>
      </line>
      <line nr="66">
        <covered by="Motley\Test\CommandComponentTest::testSetGetDisplayName"/>
        <covered by="Motley\Test\CommandDoubleDashTest::testGet"/>
      </line>
      <line nr="67">
        <covered by="Motley\Test\CommandComponentTest::testSetGetDisplayName"/>
        <covered by="Motley\Test\CommandDoubleDashTest::testGet"/>
      </line>
      <line nr="69">
        <covered by="Motley\Test\CommandComponentTest::testSetGetDisplayName"/>
      </line>
      <line nr="76">
        <covered by="Motley\Test\CommandArgTest::testGetDisplayName"/>
        <covered by="Motley\Test\CommandArgTest::testSetGetDisplayName"/>
        <covered by="Motley\Test\CommandComponentTest::testSetGetDisplayName"/>
      </line>
      <line nr="77">
        <covered by="Motley\Test\CommandArgTest::testGetDisplayName"/>
        <covered by="Motley\Test\CommandArgTest::testSetGetDisplayName"/>
        <covered by="Motley\Test\CommandComponentTest::testSetGetDisplayName"/>
      </line>
      <line nr="84">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
        <covered by="Motley\Test\CommandArgTest::testValidate"/>
        <covered by="Motley\Test\CommandArgTest::testSetGetDefaultValue"/>
        <covered by="Motley\Test\CommandArrangeCompTest::testGetIsFulfilled"/>
        <covered by="Motley\Test\CommandComponentTest::testSaveLastParam"/>
        <covered by="Motley\Test\CommandComponentTest::testValiateGetLastParam"/>
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandDoubleDashTest::testValidate"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="85">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
        <covered by="Motley\Test\CommandArgTest::testValidate"/>
        <covered by="Motley\Test\CommandArgTest::testSetGetDefaultValue"/>
        <covered by="Motley\Test\CommandArrangeCompTest::testGetIsFulfilled"/>
        <covered by="Motley\Test\CommandComponentTest::testSaveLastParam"/>
        <covered by="Motley\Test\CommandComponentTest::testValiateGetLastParam"/>
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandDoubleDashTest::testValidate"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="86">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
        <covered by="Motley\Test\CommandArgTest::testValidate"/>
        <covered by="Motley\Test\CommandArgTest::testSetGetDefaultValue"/>
        <covered by="Motley\Test\CommandArrangeCompTest::testGetIsFulfilled"/>
        <covered by="Motley\Test\CommandComponentTest::testSaveLastParam"/>
        <covered by="Motley\Test\CommandComponentTest::testValiateGetLastParam"/>
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandDoubleDashTest::testValidate"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="87">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
        <covered by="Motley\Test\CommandArgTest::testValidate"/>
        <covered by="Motley\Test\CommandArgTest::testSetGetDefaultValue"/>
        <covered by="Motley\Test\CommandArrangeCompTest::testGetIsFulfilled"/>
        <covered by="Motley\Test\CommandComponentTest::testSaveLastParam"/>
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDoubleDashTest::testValidate"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="88">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
        <covered by="Motley\Test\CommandArgTest::testValidate"/>
        <covered by="Motley\Test\CommandArgTest::testSetGetDefaultValue"/>
        <covered by="Motley\Test\CommandArrangeCompTest::testGetIsFulfilled"/>
        <covered by="Motley\Test\CommandComponentTest::testSaveLastParam"/>
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDoubleDashTest::testValidate"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="90">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
        <covered by="Motley\Test\CommandArgTest::testValidate"/>
        <covered by="Motley\Test\CommandComponentTest::testValiateGetLastParam"/>
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandDoubleDashTest::testValidate"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="92">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
        <covered by="Motley\Test\CommandArgTest::testValidate"/>
        <covered by="Motley\Test\CommandArgTest::testSetGetDefaultValue"/>
        <covered by="Motley\Test\CommandArrangeCompTest::testGetIsFulfilled"/>
        <covered by="Motley\Test\CommandComponentTest::testSaveLastParam"/>
        <covered by="Motley\Test\CommandComponentTest::testValiateGetLastParam"/>
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandDoubleDashTest::testValidate"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="97">
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
        <covered by="Motley\Test\CommandArgTest::testSetGetDefaultValue"/>
        <covered by="Motley\Test\CommandComponentTest::testSaveLastParam"/>
        <covered by="Motley\Test\CommandComponentTest::testValiateGetLastParam"/>
        <covered by="Motley\Test\CommandDoubleDashTest::testValidate"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="103">
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
        <covered by="Motley\Test\CommandComponentTest::testSaveLastParam"/>
        <covered by="Motley\Test\CommandComponentTest::testValiateGetLastParam"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="109">
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
        <covered by="Motley\Test\CommandComponentTest::testSaveLastParam"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="116">
        <covered by="Motley\Test\CommandComponentTest::testValiateGetLastParam"/>
      </line>
      <line nr="117">
        <covered by="Motley\Test\CommandComponentTest::testValiateGetLastParam"/>
      </line>
      <line nr="118">
        <covered by="Motley\Test\CommandComponentTest::testValiateGetLastParam"/>
      </line>
      <line nr="119">
        <covered by="Motley\Test\CommandComponentTest::testValiateGetLastParam"/>
      </line>
      <line nr="125">
        <covered by="Motley\Test\CommandArrangeCompTest::testGetIsFulfilled"/>
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
      </line>
      <line nr="130">
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
      </line>
      <line nr="131">
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
      </line>
      <line nr="142">
        <covered by="Motley\Test\CommandComponentTest::testFindComponentByName"/>
      </line>
      <line nr="143">
        <covered by="Motley\Test\CommandComponentTest::testFindComponentByName"/>
      </line>
      <line nr="144">
        <covered by="Motley\Test\CommandComponentTest::testFindComponentByName"/>
      </line>
      <line nr="145">
        <covered by="Motley\Test\CommandComponentTest::testFindComponentByName"/>
      </line>
      <line nr="148">
        <covered by="Motley\Test\CommandComponentTest::testFindComponentByName"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_COMMENT">/// Source code file for the Motley::CommandComponent class.</token>
      </line>
      <line no="3">
        <token name="T_COMMENT">/// @copyright Copyright (c) 2017, Eric Alan Christiansen.\n</token>
      </line>
      <line no="4">
        <token name="T_COMMENT">/// MIT License. See &lt;https://opensource.org/licenses/MIT&gt;.</token>
      </line>
      <line no="5">
        <token name="T_COMMENT">/// @file</token>
      </line>
      <line no="6">
        <token name="T_COMMENT">### Note: This file uses Uses doxygen style annotation comments.</token>
      </line>
      <line no="7">
        <token name="T_COMMENT">### Note: This file possibly includes some PHPUnit comment directives.</token>
      </line>
      <line no="8">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Motley</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9"/>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Checker</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11"/>
      <line no="12">
        <token name="T_COMMENT">/// Represent a component of a command line arrangement.</token>
      </line>
      <line no="13">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandComponent</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="14"/>
      <line no="15">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_WHITESPACE">        </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">""</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">     </token>
        <token name="T_COMMENT">///&lt; Object name.</token>
      </line>
      <line no="16">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$description</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">""</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">     </token>
        <token name="T_COMMENT">///&lt; Object description.</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$displayName</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">   </token>
        <token name="T_COMMENT">///&lt; Object display name.</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$lastParamValue</token>
        <token name="T_WHITESPACE">   </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">""</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">///&lt; The last param value.</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$lastParamIsValid</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">///&lt; Was the last param valid.</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$lastParamMessage</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">""</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">///&lt; Possible error message about last param.</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$validParamHist</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">///&lt; All valid params validated since reset.</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$chkW</token>
        <token name="T_WHITESPACE">             </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_COMMENT">///&lt; Warning checker.</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$chkE</token>
        <token name="T_WHITESPACE">             </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_COMMENT">///&lt; Error checker.</token>
      </line>
      <line no="24"/>
      <line no="25">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Class instance constructor.</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $name - The object name.</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $desc - The object description.</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_EQUAL">=</token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$desc</token>
        <token name="T_EQUAL">=</token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">is_null</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">name</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">is_null</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$desc</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">description</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$desc</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">chkW</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Checker</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">E_USER_WARNING</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">chkE</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Checker</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">E_USER_ERROR</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="38"/>
      <line no="39">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Get the object name.</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return the object name.</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">name</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="44"/>
      <line no="45">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Set the object name.</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $name - The object name.</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">name</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="50"/>
      <line no="51">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Get the object description.</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return the object description.</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getDescription</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">description</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="56"/>
      <line no="57">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Set the object description.</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $desc - the object description.</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setDescription</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$desc</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">description</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$desc</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="62"/>
      <line no="63">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Get the display name.</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return the display name.</token>
      </line>
      <line no="65">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getDisplayName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="66">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">is_null</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">displayName</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">displayName</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">name</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="72"/>
      <line no="73">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Set the display name.</token>
      </line>
      <line no="74">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $dispName - The display name.</token>
      </line>
      <line no="75">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setDisplayName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$dispName</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">displayName</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$dispName</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="78"/>
      <line no="79">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Save the last command line parameter processed.</token>
      </line>
      <line no="80">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $param - The command line parameter.</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $isValid - True if $param meets validation requirements.</token>
      </line>
      <line no="82">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $message - Explain why $param is or is not valid.</token>
      </line>
      <line no="83">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">saveLastParam</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$param</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$isValid</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">lastParamValue</token>
        <token name="T_WHITESPACE">   </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$param</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="85">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">lastParamIsValid</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$isValid</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$isValid</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validParamHist</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$param</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">lastParamMessage</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">VALID: </token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="89">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">lastParamMessage</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">INVALID: </token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="91">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="92">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="93"/>
      <line no="94">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// get the last param value.</token>
      </line>
      <line no="95">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return The last command line parameter processed.</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getLastParamValue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">lastParamValue</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="99"/>
      <line no="100">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// get the last param is valid flag.</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return The last command line parameter is valid flag.</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getLastParamIsValid</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">lastParamIsValid</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="104">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="105"/>
      <line no="106">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// get the last param message.</token>
      </line>
      <line no="107">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return The last command line parameter message.</token>
      </line>
      <line no="108">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getLastParamMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="109">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">lastParamMessage</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="110">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="111"/>
      <line no="112">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Validate a command line parameter.</token>
      </line>
      <line no="113">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $param - A command line parameter.</token>
      </line>
      <line no="114">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return TRUE if $param is valid, else FALSE.</token>
      </line>
      <line no="115">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">validate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$param</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="116">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="117">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"All params invalid until child overrides validate function!"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="118">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">saveLastParam</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$param</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="119">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="120">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="121"/>
      <line no="122">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Get the valid params history.</token>
      </line>
      <line no="123">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return Array of all valid params validated since last reset.</token>
      </line>
      <line no="124">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getValidParamHistory</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="125">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validParamHist</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="126">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="127"/>
      <line no="128">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Reset the valid params history.</token>
      </line>
      <line no="129">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">resetValidParamHistory</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="130">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validParamHist</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="131">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="132"/>
      <line no="133">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">// Static functions...</token>
      </line>
      <line no="134"/>
      <line no="135">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Find component(s) by name from an array of Motley::CommandComponent objects.</token>
      </line>
      <line no="136">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $name - The name of the component.</token>
      </line>
      <line no="137">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $components - An array of Motley::CommandComponent objects.</token>
      </line>
      <line no="138">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// This includes Motley::CommandArg, Motley::CommandOpt, Motley::CommandOptGrp,</token>
      </line>
      <line no="139">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// and Motley::CommandDoubleDash.</token>
      </line>
      <line no="140">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return An array of components that matched the name.</token>
      </line>
      <line no="141">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">findComponentByName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$components</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="142">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="143">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$components</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$component</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="144">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_IS_EQUAL">==</token>
        <token name="T_VARIABLE">$component</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="145">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$component</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="146">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="147">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="148">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="149">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="150"/>
      <line no="151">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="152">
        <token name="T_CLOSE_TAG">?&gt;</token>
      </line>
      <line no="153"/>
    </source>
  </file>
</phpunit>
