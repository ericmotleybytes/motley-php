<?xml version="1.0"?>
<phpunit xmlns="http://schema.phpunit.de/coverage/1.0">
  <file name="CommandOpt.php" path="/">
    <totals>
      <lines total="249" comments="122" code="127" executable="115" executed="115" percent="100.00"/>
      <methods count="10" tested="10" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="CommandOpt" start="13" executable="115" executed="115" crap="44">
      <package full="" name="" sub="" category=""/>
      <namespace name="Motley"/>
      <method name="__construct" signature="__construct(string $name=null, string $desc=null,&#10;        array $switches=null)" start="23" end="29" crap="2" executable="4" executed="4" coverage="100"/>
      <method name="addOptSwitches" signature="addOptSwitches(array $switches) : int" start="36" end="48" crap="4" executable="7" executed="7" coverage="100"/>
      <method name="getOptSwitches" signature="getOptSwitches() : array" start="52" end="54" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="clearOptSwitches" signature="clearOptSwitches()" start="57" end="59" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="setOptArg" signature="setOptArg(CommandArg $argObj=null, bool $isOpt=false)" start="64" end="67" crap="1" executable="3" executed="3" coverage="100"/>
      <method name="getOptArg" signature="getOptArg()" start="71" end="73" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getOptArgOptional" signature="getOptArgOptional()" start="77" end="79" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getSwitchesString" signature="getSwitchesString()" start="83" end="134" crap="16" executable="33" executed="33" coverage="100"/>
      <method name="validate" signature="validate(string $param) : bool" start="139" end="231" crap="14" executable="56" executed="56" coverage="100"/>
      <method name="checkOptSwitch" signature="checkOptSwitch(string $switch) : bool" start="236" end="246" crap="3" executable="7" executed="7" coverage="100"/>
    </class>
    <coverage>
      <line nr="25">
        <covered by="Motley\Test\CommandArrangeTest::testDefineGetClearArrangement"/>
        <covered by="Motley\Test\CommandDemoTest::testNew"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testNew"/>
        <covered by="Motley\Test\CommandOptTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptTest::testSetGetOptArg"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="26">
        <covered by="Motley\Test\CommandArrangeTest::testDefineGetClearArrangement"/>
        <covered by="Motley\Test\CommandDemoTest::testNew"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testNew"/>
        <covered by="Motley\Test\CommandOptTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptTest::testSetGetOptArg"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="27">
        <covered by="Motley\Test\CommandArrangeTest::testDefineGetClearArrangement"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
      </line>
      <line nr="29">
        <covered by="Motley\Test\CommandArrangeTest::testDefineGetClearArrangement"/>
        <covered by="Motley\Test\CommandDemoTest::testNew"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testNew"/>
        <covered by="Motley\Test\CommandOptTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptTest::testSetGetOptArg"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="37">
        <covered by="Motley\Test\CommandArrangeTest::testDefineGetClearArrangement"/>
        <covered by="Motley\Test\CommandDemoTest::testNew"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="38">
        <covered by="Motley\Test\CommandArrangeTest::testDefineGetClearArrangement"/>
        <covered by="Motley\Test\CommandDemoTest::testNew"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="39">
        <covered by="Motley\Test\CommandArrangeTest::testDefineGetClearArrangement"/>
        <covered by="Motley\Test\CommandDemoTest::testNew"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="40">
        <covered by="Motley\Test\CommandOptTest::testAddGetClearOptSwitches"/>
      </line>
      <line nr="42">
        <covered by="Motley\Test\CommandArrangeTest::testDefineGetClearArrangement"/>
        <covered by="Motley\Test\CommandDemoTest::testNew"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="44">
        <covered by="Motley\Test\CommandArrangeTest::testDefineGetClearArrangement"/>
        <covered by="Motley\Test\CommandDemoTest::testNew"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="47">
        <covered by="Motley\Test\CommandArrangeTest::testDefineGetClearArrangement"/>
        <covered by="Motley\Test\CommandDemoTest::testNew"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="53">
        <covered by="Motley\Test\CommandArrangeTest::testDefineGetClearArrangement"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="58">
        <covered by="Motley\Test\CommandOptTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
      </line>
      <line nr="59">
        <covered by="Motley\Test\CommandOptTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
      </line>
      <line nr="65">
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testSetGetOptArg"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="66">
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testSetGetOptArg"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="67">
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testSetGetOptArg"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="72">
        <covered by="Motley\Test\CommandOptTest::testSetGetOptArg"/>
      </line>
      <line nr="78">
        <covered by="Motley\Test\CommandOptTest::testSetGetOptArg"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
      </line>
      <line nr="84">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
      </line>
      <line nr="85">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
      </line>
      <line nr="86">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
      </line>
      <line nr="87">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
      </line>
      <line nr="88">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
      </line>
      <line nr="89">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
      </line>
      <line nr="90">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
      </line>
      <line nr="92">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
      </line>
      <line nr="95">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
      </line>
      <line nr="96">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
      </line>
      <line nr="97">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
      </line>
      <line nr="98">
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
      </line>
      <line nr="100">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
      </line>
      <line nr="101">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
      </line>
      <line nr="102">
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
      </line>
      <line nr="104">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
      </line>
      <line nr="106">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
      </line>
      <line nr="108">
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
      </line>
      <line nr="109">
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
      </line>
      <line nr="111">
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
      </line>
      <line nr="114">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
      </line>
      <line nr="115">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
      </line>
      <line nr="117">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
      </line>
      <line nr="118">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
      </line>
      <line nr="119">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
      </line>
      <line nr="120">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
      </line>
      <line nr="121">
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
      </line>
      <line nr="123">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
      </line>
      <line nr="125">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
      </line>
      <line nr="127">
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
      </line>
      <line nr="128">
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
      </line>
      <line nr="130">
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
      </line>
      <line nr="133">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
      </line>
      <line nr="140">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="142">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="143">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="145">
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="146">
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="149">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="150">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="152">
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="154">
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="155">
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="157">
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="158">
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="160">
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="161">
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="165">
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="166">
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="167">
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="168">
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="174">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="175">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="176">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="177">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="178">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="181">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="183">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="184">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="185">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="186">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="188">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="190">
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="191">
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="192">
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="193">
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="195">
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="196">
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="197">
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="198">
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="199">
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="201">
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="202">
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="203">
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="204">
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="205">
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="206">
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="208">
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="209">
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="210">
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="214">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="215">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="216">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="217">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="218">
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="220">
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="221">
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="222">
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="223">
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="237">
        <covered by="Motley\Test\CommandArrangeTest::testDefineGetClearArrangement"/>
        <covered by="Motley\Test\CommandDemoTest::testNew"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testCheckOptSwitch"/>
        <covered by="Motley\Test\CommandOptTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="238">
        <covered by="Motley\Test\CommandArrangeTest::testDefineGetClearArrangement"/>
        <covered by="Motley\Test\CommandDemoTest::testNew"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testCheckOptSwitch"/>
        <covered by="Motley\Test\CommandOptTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="239">
        <covered by="Motley\Test\CommandArrangeTest::testDefineGetClearArrangement"/>
        <covered by="Motley\Test\CommandDemoTest::testNew"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testCheckOptSwitch"/>
        <covered by="Motley\Test\CommandOptTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="240">
        <covered by="Motley\Test\CommandArrangeTest::testDefineGetClearArrangement"/>
        <covered by="Motley\Test\CommandDemoTest::testNew"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testCheckOptSwitch"/>
        <covered by="Motley\Test\CommandOptTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="241">
        <covered by="Motley\Test\CommandDemoTest::testNew"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testCheckOptSwitch"/>
        <covered by="Motley\Test\CommandOptTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="242">
        <covered by="Motley\Test\CommandDemoTest::testNew"/>
        <covered by="Motley\Test\CommandDemoTest::testRunDefaultHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunHelp"/>
        <covered by="Motley\Test\CommandDemoTest::testRunVersion"/>
        <covered by="Motley\Test\CommandDemoTest::testRunBadSwitch"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
        <covered by="Motley\Test\CommandOptTest::testCheckOptSwitch"/>
        <covered by="Motley\Test\CommandOptTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptTest::testGetSwitchesString"/>
        <covered by="Motley\Test\CommandOptTest::testValidate"/>
      </line>
      <line nr="244">
        <covered by="Motley\Test\CommandOptTest::testCheckOptSwitch"/>
        <covered by="Motley\Test\CommandOptTest::testAddGetClearOptSwitches"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_COMMENT">/// Source code file for the Motley::CommandOpt class.</token>
      </line>
      <line no="3">
        <token name="T_COMMENT">/// @copyright Copyright (c) 2017, Eric Alan Christiansen.\n</token>
      </line>
      <line no="4">
        <token name="T_COMMENT">/// MIT License. See &lt;https://opensource.org/licenses/MIT&gt;.</token>
      </line>
      <line no="5">
        <token name="T_COMMENT">/// @file</token>
      </line>
      <line no="6">
        <token name="T_COMMENT">### Note: This file uses Uses doxygen style annotation comments.</token>
      </line>
      <line no="7">
        <token name="T_COMMENT">### Note: This file possibly includes some PHPUnit comment directives.</token>
      </line>
      <line no="8">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Motley</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9"/>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">CommandArg</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11"/>
      <line no="12">
        <token name="T_COMMENT">/// Represent a command line option.</token>
      </line>
      <line no="13">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandOpt</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandComponent</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="14"/>
      <line no="15">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$optSwitches</token>
        <token name="T_WHITESPACE">      </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_COMMENT">///&lt; Option switch synonyms.</token>
      </line>
      <line no="16">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$optArgument</token>
        <token name="T_WHITESPACE">      </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">     </token>
        <token name="T_COMMENT">///&lt; Option argument, if any.</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$optArgOptional</token>
        <token name="T_WHITESPACE">   </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">///&lt; Is option argument optional.</token>
      </line>
      <line no="18"/>
      <line no="19">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Class instance constructor.</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $name - optional name for option.</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $desc - optional description for option.</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $switches - optional array of switches.</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_EQUAL">=</token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$desc</token>
        <token name="T_EQUAL">=</token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">        </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$switches</token>
        <token name="T_EQUAL">=</token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">parent</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$desc</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">is_null</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$switches</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">addOptSwitches</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$switches</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="30"/>
      <line no="31">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Add an array of switch synonyms.</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// If a switch is already on the switch list, then</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// it is ignored.</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $switches - An array of string values.</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @returns New number of switch synonyms defined.</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">addOptSwitches</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$switches</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$switches</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$switch</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$check</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">checkOptSwitch</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$switch</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">chkW</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">checkNotFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$check</token>
        <token name="T_COMMA">,</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">Bad switch format (</token>
        <token name="T_VARIABLE">$switch</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">).</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONTINUE">continue</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">in_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$switch</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">optSwitches</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT"># only add non-duplicates</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">optSwitches</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$switch</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">optSwitches</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="49"/>
      <line no="50">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Get the list of switch synonyms.</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return The list of switch synonyms.</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getOptSwitches</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">optSwitches</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="55"/>
      <line no="56">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Clear all switch synonyms.</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">clearOptSwitches</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">optSwitches</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="60"/>
      <line no="61">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Set the option argument, if any.</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $argObj - An instance of Motley::CommandArg.</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $isOpt - Is the argument portion of this option optional?</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setOptArg</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">CommandArg</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$argObj</token>
        <token name="T_EQUAL">=</token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$isOpt</token>
        <token name="T_EQUAL">=</token>
        <token name="T_STRING">false</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="65">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">optArgument</token>
        <token name="T_WHITESPACE">    </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$argObj</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="66">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">optArgOptional</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$isOpt</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="68"/>
      <line no="69">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Get the option argument, if any.</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return An instance of Motley::CommandArg or null.</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getOptArg</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">optArgument</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="74"/>
      <line no="75">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Get the option argument optional flag.</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return True if the associated option argument is optional, else false;</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getOptArgOptional</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="78">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">optArgOptional</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="80"/>
      <line no="81">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Get switches display string.</token>
      </line>
      <line no="82">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return A textual notation for the option.</token>
      </line>
      <line no="83">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getSwitchesString</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">""</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="85">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$switches</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">optSwitches</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$switches1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_COMMENT">// one dash switches</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$switches2</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_COMMENT">// two dash switches</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$switches</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$switch</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="89">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">substr</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$switch</token>
        <token name="T_COMMA">,</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
        <token name="T_LNUMBER">2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_IS_EQUAL">==</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"--"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$switches2</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$switch</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="91">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="92">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$switches1</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$switch</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="93">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="94">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="95">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">optArgument</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$argName</token>
        <token name="T_EQUAL">=</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">""</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">is_null</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$argName</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$arg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDisplayName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="99">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="100">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$switches1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$switch</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strlen</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_GT">&gt;</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONCAT_EQUAL">.=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">","</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_COMMENT">// add delimiter</token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="104">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONCAT_EQUAL">.=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$switch</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="105">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="106">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">is_null</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LOGICAL_AND">and</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$switches2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_IS_EQUAL">==</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="107">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT"># output option arg</token>
      </line>
      <line no="108">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOptArgOptional</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="109">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONCAT_EQUAL">.=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">" ["</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$argName</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"]"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="110">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="111">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONCAT_EQUAL">.=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">" "</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$argName</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="112">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="113">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="114">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$switches1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_GT">&gt;</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LOGICAL_AND">and</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$switches2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_GT">&gt;</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="115">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONCAT_EQUAL">.=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">" | "</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="116">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="117">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$cnt</token>
        <token name="T_EQUAL">=</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="118">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$switches2</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$switch</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="119">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$cnt</token>
        <token name="T_INC">++</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="120">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$cnt</token>
        <token name="T_GT">&gt;</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="121">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONCAT_EQUAL">.=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">","</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_COMMENT">// add delimiter</token>
      </line>
      <line no="122">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="123">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONCAT_EQUAL">.=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$switch</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="124">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="125">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$switches2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_GT">&gt;</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LOGICAL_AND">and</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">is_null</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="126">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT"># output argument</token>
      </line>
      <line no="127">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOptArgOptional</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="128">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONCAT_EQUAL">.=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"[="</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$argName</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"]"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="129">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="130">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONCAT_EQUAL">.=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"="</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$argName</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="131">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="132">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="133">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="134">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="135"/>
      <line no="136">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Validate a command line option switch (and argument).</token>
      </line>
      <line no="137">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $param - A command line parameter.</token>
      </line>
      <line no="138">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return TRUE if $param is valid, else FALSE.</token>
      </line>
      <line no="139">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">validate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$param</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="140">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">substr</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$param</token>
        <token name="T_COMMA">,</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
        <token name="T_LNUMBER">2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_IS_EQUAL">==</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"--"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="141">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// "--..." form</token>
      </line>
      <line no="142">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$firstEquals</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strpos</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$param</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"="</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="143">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$firstEquals</token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_STRING">false</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="144">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">// found an equals sign</token>
      </line>
      <line no="145">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$switchPart</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">substr</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$param</token>
        <token name="T_COMMA">,</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$firstEquals</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="146">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$argPart</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">substr</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$param</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$firstEquals</token>
        <token name="T_PLUS">+</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="147">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="148">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">// no equals sign found.</token>
      </line>
      <line no="149">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$switchPart</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$param</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="150">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$argPart</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="151">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="152">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">substr</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$param</token>
        <token name="T_COMMA">,</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_IS_EQUAL">==</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"-"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="153">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// "-..." form</token>
      </line>
      <line no="154">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$firstSpace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strpos</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$param</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">" "</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="155">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$firstSpace</token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_STRING">false</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="156">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">// found a space</token>
      </line>
      <line no="157">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$switchPart</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">substr</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$param</token>
        <token name="T_COMMA">,</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$firstSpace</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="158">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$argPart</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">substr</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$param</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$firstSpace</token>
        <token name="T_PLUS">+</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="159">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="160">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$switchPart</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$param</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="161">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$argPart</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="162">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="163">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="164">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// not a '-' or '--' switch</token>
      </line>
      <line no="165">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="166">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">'</token>
        <token name="T_VARIABLE">$param</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">' is a valid option switch.</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="167">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">saveLastParam</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$param</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="168">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="169">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="170">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">#echo("DBG: param='$param'\n");</token>
      </line>
      <line no="171">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">#echo("DBG: switchPart='$switchPart'\n");</token>
      </line>
      <line no="172">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">#echo("DBG: argPart='$argPart'\n");</token>
      </line>
      <line no="173">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// validate $switchPart.</token>
      </line>
      <line no="174">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$switchMatched</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="175">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOptSwitches</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$switch</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="176">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$switchPart</token>
        <token name="T_IS_EQUAL">==</token>
        <token name="T_VARIABLE">$switch</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="177">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$switchMatched</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="178">
        <token name="T_WHITESPACE">                </token>
        <token name="T_BREAK">break</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="179">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="180">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="181">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$switchMatched</token>
        <token name="T_IS_EQUAL">==</token>
        <token name="T_STRING">false</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="182">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// switch part did not match.</token>
      </line>
      <line no="183">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="184">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">'</token>
        <token name="T_VARIABLE">$param</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">' does not match any switches expected here.</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="185">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">saveLastParam</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$param</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="186">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="187">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="188">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">is_null</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">optArgument</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="189">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// There is an associated arg, validate $argPart</token>
      </line>
      <line no="190">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$arg</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">optArgument</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="191">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$argOpt</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">optArgOptional</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="192">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$argOpt</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LOGICAL_AND">and</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_null</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$argPart</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="193">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$argPart</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"-"</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_COMMENT">// shorthand for arg default value, if any.</token>
      </line>
      <line no="194">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="195">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_null</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$argPart</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="196">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="197">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">'</token>
        <token name="T_VARIABLE">$param</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">' does not have a mandatory argument part.</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="198">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">saveLastParam</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$param</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="199">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="200">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="201">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$arg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$argPart</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="202">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$params</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$switchPart</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$arg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getLastParamValue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="203">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="204">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">'</token>
        <token name="T_VARIABLE">$param</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">' switch and argument ok.</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="205">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">saveLastParam</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$params</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="206">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="207">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="208">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$arg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getLastParamMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="209">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">saveLastParam</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$params</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="210">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="211">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="212">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="213">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// no associated arg, $argPart should be null.</token>
      </line>
      <line no="214">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_null</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$argPart</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="215">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="216">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">'</token>
        <token name="T_VARIABLE">$param</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">' switch ok.</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="217">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">saveLastParam</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$param</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="218">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="219">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="220">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="221">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">'</token>
        <token name="T_VARIABLE">$param</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">' has unexpected argument value.</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="222">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">saveLastParam</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$param</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="223">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="224">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="225">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="226">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// It should be impossible to reach here, but defensive code follows.</token>
      </line>
      <line no="227">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// @codeCoverageIgnoreStart</token>
      </line>
      <line no="228">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">trigger_error</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Unexpected path."</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">E_USER_ERROR</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="229">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="230">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// @codeCoverageIgnoreEnd</token>
      </line>
      <line no="231">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="232"/>
      <line no="233">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Check option switch format.</token>
      </line>
      <line no="234">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $switch - The switch to check.</token>
      </line>
      <line no="235">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return True is switch format is ok, else false.</token>
      </line>
      <line no="236">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">checkOptSwitch</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$switch</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="237">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$pat1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/^\-[0-9a-zA-Z]{1}$/'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="238">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$pat2</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/^\-\-[0-9a-zA-Z]+[0-9a-zA-Z\_\-]*$/'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="239">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">preg_match</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$pat1</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$switch</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_IS_EQUAL">==</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="240">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="241">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">preg_match</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$pat2</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$switch</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_IS_EQUAL">==</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="242">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="243">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="244">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="245">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="246">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="247"/>
      <line no="248">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="249">
        <token name="T_CLOSE_TAG">?&gt;</token>
      </line>
      <line no="250"/>
    </source>
  </file>
</phpunit>
