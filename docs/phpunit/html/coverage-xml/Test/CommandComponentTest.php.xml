<?xml version="1.0"?>
<phpunit xmlns="http://schema.phpunit.de/coverage/1.0">
  <file name="CommandComponentTest.php" path="/Test">
    <totals>
      <lines total="127" comments="42" code="85" executable="85" executed="85" percent="100.00"/>
      <methods count="8" tested="8" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="CommandComponentTest" start="15" executable="85" executed="85" crap="8">
      <package full="" name="" sub="" category=""/>
      <namespace name="Motley\Test"/>
      <method name="testNew" signature="testNew()" start="18" end="21" crap="1" executable="3" executed="3" coverage="100"/>
      <method name="testSetGetName" signature="testSetGetName()" start="24" end="31" crap="1" executable="7" executed="7" coverage="100"/>
      <method name="testSetGetDescription" signature="testSetGetDescription()" start="34" end="41" crap="1" executable="7" executed="7" coverage="100"/>
      <method name="testSetGetDisplayName" signature="testSetGetDisplayName()" start="44" end="51" crap="1" executable="7" executed="7" coverage="100"/>
      <method name="testSaveLastParam" signature="testSaveLastParam()" start="54" end="70" crap="1" executable="16" executed="16" coverage="100"/>
      <method name="testValiateGetLastParam" signature="testValiateGetLastParam()" start="73" end="80" crap="1" executable="7" executed="7" coverage="100"/>
      <method name="testParamHistory" signature="testParamHistory()" start="83" end="110" crap="1" executable="26" executed="26" coverage="100"/>
      <method name="testFindComponentByName" signature="testFindComponentByName()" start="113" end="125" crap="1" executable="12" executed="12" coverage="100"/>
    </class>
    <coverage>
      <line nr="19">
        <covered by="Motley\Test\CommandComponentTest::testNew"/>
      </line>
      <line nr="20">
        <covered by="Motley\Test\CommandComponentTest::testNew"/>
      </line>
      <line nr="21">
        <covered by="Motley\Test\CommandComponentTest::testNew"/>
      </line>
      <line nr="25">
        <covered by="Motley\Test\CommandComponentTest::testSetGetName"/>
      </line>
      <line nr="26">
        <covered by="Motley\Test\CommandComponentTest::testSetGetName"/>
      </line>
      <line nr="27">
        <covered by="Motley\Test\CommandComponentTest::testSetGetName"/>
      </line>
      <line nr="28">
        <covered by="Motley\Test\CommandComponentTest::testSetGetName"/>
      </line>
      <line nr="29">
        <covered by="Motley\Test\CommandComponentTest::testSetGetName"/>
      </line>
      <line nr="30">
        <covered by="Motley\Test\CommandComponentTest::testSetGetName"/>
      </line>
      <line nr="31">
        <covered by="Motley\Test\CommandComponentTest::testSetGetName"/>
      </line>
      <line nr="35">
        <covered by="Motley\Test\CommandComponentTest::testSetGetDescription"/>
      </line>
      <line nr="36">
        <covered by="Motley\Test\CommandComponentTest::testSetGetDescription"/>
      </line>
      <line nr="37">
        <covered by="Motley\Test\CommandComponentTest::testSetGetDescription"/>
      </line>
      <line nr="38">
        <covered by="Motley\Test\CommandComponentTest::testSetGetDescription"/>
      </line>
      <line nr="39">
        <covered by="Motley\Test\CommandComponentTest::testSetGetDescription"/>
      </line>
      <line nr="40">
        <covered by="Motley\Test\CommandComponentTest::testSetGetDescription"/>
      </line>
      <line nr="41">
        <covered by="Motley\Test\CommandComponentTest::testSetGetDescription"/>
      </line>
      <line nr="45">
        <covered by="Motley\Test\CommandComponentTest::testSetGetDisplayName"/>
      </line>
      <line nr="46">
        <covered by="Motley\Test\CommandComponentTest::testSetGetDisplayName"/>
      </line>
      <line nr="47">
        <covered by="Motley\Test\CommandComponentTest::testSetGetDisplayName"/>
      </line>
      <line nr="48">
        <covered by="Motley\Test\CommandComponentTest::testSetGetDisplayName"/>
      </line>
      <line nr="49">
        <covered by="Motley\Test\CommandComponentTest::testSetGetDisplayName"/>
      </line>
      <line nr="50">
        <covered by="Motley\Test\CommandComponentTest::testSetGetDisplayName"/>
      </line>
      <line nr="51">
        <covered by="Motley\Test\CommandComponentTest::testSetGetDisplayName"/>
      </line>
      <line nr="55">
        <covered by="Motley\Test\CommandComponentTest::testSaveLastParam"/>
      </line>
      <line nr="56">
        <covered by="Motley\Test\CommandComponentTest::testSaveLastParam"/>
      </line>
      <line nr="57">
        <covered by="Motley\Test\CommandComponentTest::testSaveLastParam"/>
      </line>
      <line nr="58">
        <covered by="Motley\Test\CommandComponentTest::testSaveLastParam"/>
      </line>
      <line nr="59">
        <covered by="Motley\Test\CommandComponentTest::testSaveLastParam"/>
      </line>
      <line nr="60">
        <covered by="Motley\Test\CommandComponentTest::testSaveLastParam"/>
      </line>
      <line nr="61">
        <covered by="Motley\Test\CommandComponentTest::testSaveLastParam"/>
      </line>
      <line nr="62">
        <covered by="Motley\Test\CommandComponentTest::testSaveLastParam"/>
      </line>
      <line nr="63">
        <covered by="Motley\Test\CommandComponentTest::testSaveLastParam"/>
      </line>
      <line nr="64">
        <covered by="Motley\Test\CommandComponentTest::testSaveLastParam"/>
      </line>
      <line nr="65">
        <covered by="Motley\Test\CommandComponentTest::testSaveLastParam"/>
      </line>
      <line nr="66">
        <covered by="Motley\Test\CommandComponentTest::testSaveLastParam"/>
      </line>
      <line nr="67">
        <covered by="Motley\Test\CommandComponentTest::testSaveLastParam"/>
      </line>
      <line nr="68">
        <covered by="Motley\Test\CommandComponentTest::testSaveLastParam"/>
      </line>
      <line nr="69">
        <covered by="Motley\Test\CommandComponentTest::testSaveLastParam"/>
      </line>
      <line nr="70">
        <covered by="Motley\Test\CommandComponentTest::testSaveLastParam"/>
      </line>
      <line nr="74">
        <covered by="Motley\Test\CommandComponentTest::testValiateGetLastParam"/>
      </line>
      <line nr="75">
        <covered by="Motley\Test\CommandComponentTest::testValiateGetLastParam"/>
      </line>
      <line nr="76">
        <covered by="Motley\Test\CommandComponentTest::testValiateGetLastParam"/>
      </line>
      <line nr="77">
        <covered by="Motley\Test\CommandComponentTest::testValiateGetLastParam"/>
      </line>
      <line nr="78">
        <covered by="Motley\Test\CommandComponentTest::testValiateGetLastParam"/>
      </line>
      <line nr="79">
        <covered by="Motley\Test\CommandComponentTest::testValiateGetLastParam"/>
      </line>
      <line nr="80">
        <covered by="Motley\Test\CommandComponentTest::testValiateGetLastParam"/>
      </line>
      <line nr="84">
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
      </line>
      <line nr="85">
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
      </line>
      <line nr="86">
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
      </line>
      <line nr="87">
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
      </line>
      <line nr="88">
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
      </line>
      <line nr="89">
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
      </line>
      <line nr="90">
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
      </line>
      <line nr="91">
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
      </line>
      <line nr="92">
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
      </line>
      <line nr="93">
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
      </line>
      <line nr="94">
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
      </line>
      <line nr="95">
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
      </line>
      <line nr="96">
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
      </line>
      <line nr="97">
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
      </line>
      <line nr="98">
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
      </line>
      <line nr="99">
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
      </line>
      <line nr="100">
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
      </line>
      <line nr="101">
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
      </line>
      <line nr="102">
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
      </line>
      <line nr="103">
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
      </line>
      <line nr="104">
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
      </line>
      <line nr="106">
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
      </line>
      <line nr="107">
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
      </line>
      <line nr="108">
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
      </line>
      <line nr="109">
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
      </line>
      <line nr="110">
        <covered by="Motley\Test\CommandComponentTest::testParamHistory"/>
      </line>
      <line nr="114">
        <covered by="Motley\Test\CommandComponentTest::testFindComponentByName"/>
      </line>
      <line nr="115">
        <covered by="Motley\Test\CommandComponentTest::testFindComponentByName"/>
      </line>
      <line nr="116">
        <covered by="Motley\Test\CommandComponentTest::testFindComponentByName"/>
      </line>
      <line nr="117">
        <covered by="Motley\Test\CommandComponentTest::testFindComponentByName"/>
      </line>
      <line nr="118">
        <covered by="Motley\Test\CommandComponentTest::testFindComponentByName"/>
      </line>
      <line nr="119">
        <covered by="Motley\Test\CommandComponentTest::testFindComponentByName"/>
      </line>
      <line nr="120">
        <covered by="Motley\Test\CommandComponentTest::testFindComponentByName"/>
      </line>
      <line nr="121">
        <covered by="Motley\Test\CommandComponentTest::testFindComponentByName"/>
      </line>
      <line nr="122">
        <covered by="Motley\Test\CommandComponentTest::testFindComponentByName"/>
      </line>
      <line nr="123">
        <covered by="Motley\Test\CommandComponentTest::testFindComponentByName"/>
      </line>
      <line nr="124">
        <covered by="Motley\Test\CommandComponentTest::testFindComponentByName"/>
      </line>
      <line nr="125">
        <covered by="Motley\Test\CommandComponentTest::testFindComponentByName"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_COMMENT">/// Source code file for Motley::Test::CommandComponentTest unit testing class.</token>
      </line>
      <line no="3">
        <token name="T_COMMENT">/// @copyright Copyright (c) 2017, Eric Alan Christiansen.</token>
      </line>
      <line no="4">
        <token name="T_COMMENT">/// MIT License. See &lt;https://opensource.org/licenses/MIT&gt;.</token>
      </line>
      <line no="5">
        <token name="T_COMMENT">/// @file</token>
      </line>
      <line no="6">
        <token name="T_COMMENT">### Note: This file uses Uses doxygen style annotation comments.</token>
      </line>
      <line no="7">
        <token name="T_COMMENT">### Note: This file possibly includes some PHPUnit comment directives.</token>
      </line>
      <line no="8">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Test</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9"/>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHPUnit</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Framework</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Testcase</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">CommandComponent</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13"/>
      <line no="14">
        <token name="T_COMMENT">/// Tests the Motley::CommandComponent class.</token>
      </line>
      <line no="15">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandComponentTest</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Testcase</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="16"/>
      <line no="17">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Test instantiation.</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testNew</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandComponent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"comp1"</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"A component for unit testing."</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertInstanceOf</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">CommandComponent</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="22"/>
      <line no="23">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Test setName/getName functions.</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testSetGetName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$name1a</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"comp1a"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$name1b</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"comp1b"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandComponent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$name1a</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$name1a</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$name1b</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$name1b</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="32"/>
      <line no="33">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Test setDescription/getDescription functions.</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testSetGetDescription</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$desc1a</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"description 1a."</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$desc1b</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"description 1b."</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandComponent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"comp1"</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$desc1a</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$desc1a</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDescription</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setDescription</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$desc1b</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$desc1b</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDescription</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="42"/>
      <line no="43">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Test set/get display name functions.</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testSetGetDisplayName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Normal Name"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$displayName</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Display Name"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandComponent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDisplayName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setDisplayName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$displayName</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$displayName</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDisplayName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="52"/>
      <line no="53">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Test save last param function.</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testSaveLastParam</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandComponent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"comp1"</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Component for unit testing."</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$p1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"thing"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$p2</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"aaa"</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"bbb"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$r</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$m</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"message"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">invokeFunction</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"saveLastParam"</token>
        <token name="T_COMMA">,</token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$p1</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$r</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$m</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">// call protected function</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$p1</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getLastParamValue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$r</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getLastParamIsValid</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertStringEndsWith</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$m</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getLastParamMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="65">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">invokeFunction</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="66">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"saveLastParam"</token>
        <token name="T_COMMA">,</token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$p2</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$r</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$m</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">// call protected function</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$p2</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getLastParamValue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$r</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getLastParamIsValid</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertStringEndsWith</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$m</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getLastParamMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="71"/>
      <line no="72">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Test validate and get last parameter functions.</token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testValiateGetLastParam</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="74">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandComponent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"comp1"</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Component for unit testing."</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="75">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$p1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"thing"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$p1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$p1</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getLastParamValue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="78">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getLastParamIsValid</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertGreaterThan</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">strlen</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getLastParamValue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="80">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="81"/>
      <line no="82">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Test validate and parameter history functions.</token>
      </line>
      <line no="83">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testParamHistory</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandComponent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"comp1"</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Component for unit testing."</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="85">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$exp</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$hist</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getValidParamHistory</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$exp</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$hist</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$p1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"thing"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="89">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$exp</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$p1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">invokeFunction</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="91">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"saveLastParam"</token>
        <token name="T_COMMA">,</token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$p1</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">true</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"dummy"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">// call protected function</token>
      </line>
      <line no="92">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$hist</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getValidParamHistory</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="93">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$exp</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$hist</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="94">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$p2</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"bad"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="95">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">invokeFunction</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"saveLastParam"</token>
        <token name="T_COMMA">,</token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$p2</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">false</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"dummy"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">// call protected function</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$hist</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getValidParamHistory</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$exp</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$hist</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="99">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$p3</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"stuff"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="100">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$exp</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$p3</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">invokeFunction</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"saveLastParam"</token>
        <token name="T_COMMA">,</token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$p3</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">true</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"dummy"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">// call protected function</token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$hist</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getValidParamHistory</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="104">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$exp</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$hist</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="105">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># clear history</token>
      </line>
      <line no="106">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">resetValidParamHistory</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="107">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$exp</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="108">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$hist</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$comp</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getValidParamHistory</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="109">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$exp</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$hist</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="110">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="111"/>
      <line no="112">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Test static function findComponentByName.</token>
      </line>
      <line no="113">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testFindComponentByName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="114">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$comp1</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandComponent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"comp1"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="115">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$comp2a</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandComponent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"comp2"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="116">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$comp2b</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandComponent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"comp2"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="117">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$comp3</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandComponent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"comp3"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="118">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$comps</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$comp1</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$comp2a</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$comp2b</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$comp3</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="119">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$exp</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$comp1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="120">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$exp</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">CommandComponent</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">findComponentByName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"comp1"</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$comps</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="121">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$exp</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$comp2a</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$comp2b</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="122">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$exp</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">CommandComponent</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">findComponentByName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"comp2"</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$comps</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="123">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$exp</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$comp3</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="124">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$exp</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">CommandComponent</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">findComponentByName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"comp3"</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$comps</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="125">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="126">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="127">
        <token name="T_CLOSE_TAG">?&gt;</token>
      </line>
      <line no="128"/>
    </source>
  </file>
</phpunit>
