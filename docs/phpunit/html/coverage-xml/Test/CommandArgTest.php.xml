<?xml version="1.0"?>
<phpunit xmlns="http://schema.phpunit.de/coverage/1.0">
  <file name="CommandArgTest.php" path="/Test">
    <totals>
      <lines total="236" comments="62" code="174" executable="179" executed="179" percent="100.00"/>
      <methods count="11" tested="11" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="CommandArgTest" start="14" executable="179" executed="179" crap="11">
      <package full="" name="" sub="" category=""/>
      <namespace name="Motley\Test"/>
      <method name="testNew" signature="testNew()" start="17" end="24" crap="1" executable="7" executed="7" coverage="100"/>
      <method name="testGetDisplayName" signature="testGetDisplayName()" start="27" end="35" crap="1" executable="8" executed="8" coverage="100"/>
      <method name="testValidLiterals" signature="testValidLiterals()" start="38" end="74" crap="1" executable="34" executed="34" coverage="100"/>
      <method name="testValidRegExs" signature="testValidRegExs()" start="77" end="118" crap="1" executable="39" executed="39" coverage="100"/>
      <method name="testSetGetIsFile" signature="testSetGetIsFile()" start="121" end="142" crap="1" executable="21" executed="21" coverage="100"/>
      <method name="testArgValues" signature="testArgValues()" start="145" end="170" crap="1" executable="22" executed="22" coverage="100"/>
      <method name="testGoodCheckRegEx" signature="testGoodCheckRegEx()" start="173" end="176" crap="1" executable="3" executed="3" coverage="100"/>
      <method name="testBadCheckRegEx" signature="testBadCheckRegEx()" start="179" end="185" crap="1" executable="6" executed="6" coverage="100"/>
      <method name="testValidate" signature="testValidate()" start="188" end="211" crap="1" executable="23" executed="23" coverage="100"/>
      <method name="testSetGetDisplayName" signature="testSetGetDisplayName()" start="214" end="222" crap="1" executable="8" executed="8" coverage="100"/>
      <method name="testSetGetDefaultValue" signature="testSetGetDefaultValue()" start="225" end="233" crap="1" executable="8" executed="8" coverage="100"/>
    </class>
    <coverage>
      <line nr="18">
        <covered by="Motley\Test\CommandArgTest::testNew"/>
      </line>
      <line nr="19">
        <covered by="Motley\Test\CommandArgTest::testNew"/>
      </line>
      <line nr="20">
        <covered by="Motley\Test\CommandArgTest::testNew"/>
      </line>
      <line nr="21">
        <covered by="Motley\Test\CommandArgTest::testNew"/>
      </line>
      <line nr="22">
        <covered by="Motley\Test\CommandArgTest::testNew"/>
      </line>
      <line nr="23">
        <covered by="Motley\Test\CommandArgTest::testNew"/>
      </line>
      <line nr="24">
        <covered by="Motley\Test\CommandArgTest::testNew"/>
      </line>
      <line nr="28">
        <covered by="Motley\Test\CommandArgTest::testGetDisplayName"/>
      </line>
      <line nr="29">
        <covered by="Motley\Test\CommandArgTest::testGetDisplayName"/>
      </line>
      <line nr="30">
        <covered by="Motley\Test\CommandArgTest::testGetDisplayName"/>
      </line>
      <line nr="31">
        <covered by="Motley\Test\CommandArgTest::testGetDisplayName"/>
      </line>
      <line nr="32">
        <covered by="Motley\Test\CommandArgTest::testGetDisplayName"/>
      </line>
      <line nr="33">
        <covered by="Motley\Test\CommandArgTest::testGetDisplayName"/>
      </line>
      <line nr="34">
        <covered by="Motley\Test\CommandArgTest::testGetDisplayName"/>
      </line>
      <line nr="35">
        <covered by="Motley\Test\CommandArgTest::testGetDisplayName"/>
      </line>
      <line nr="39">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
      </line>
      <line nr="40">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
      </line>
      <line nr="41">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
      </line>
      <line nr="42">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
      </line>
      <line nr="43">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
      </line>
      <line nr="44">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
      </line>
      <line nr="45">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
      </line>
      <line nr="46">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
      </line>
      <line nr="47">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
      </line>
      <line nr="48">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
      </line>
      <line nr="49">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
      </line>
      <line nr="50">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
      </line>
      <line nr="51">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
      </line>
      <line nr="52">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
      </line>
      <line nr="53">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
      </line>
      <line nr="54">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
      </line>
      <line nr="55">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
      </line>
      <line nr="56">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
      </line>
      <line nr="57">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
      </line>
      <line nr="58">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
      </line>
      <line nr="59">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
      </line>
      <line nr="60">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
      </line>
      <line nr="62">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
      </line>
      <line nr="63">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
      </line>
      <line nr="64">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
      </line>
      <line nr="65">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
      </line>
      <line nr="67">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
      </line>
      <line nr="68">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
      </line>
      <line nr="69">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
      </line>
      <line nr="70">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
      </line>
      <line nr="71">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
      </line>
      <line nr="72">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
      </line>
      <line nr="73">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
      </line>
      <line nr="74">
        <covered by="Motley\Test\CommandArgTest::testValidLiterals"/>
      </line>
      <line nr="78">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="79">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="80">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="81">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="82">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="83">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="84">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="85">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="86">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="87">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="88">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="89">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="90">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="91">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="92">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="93">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="94">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="95">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="96">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="97">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="98">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="99">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="100">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="101">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="102">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="103">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="105">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="106">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="107">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="108">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="110">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="111">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="112">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="113">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="114">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="115">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="116">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="117">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="118">
        <covered by="Motley\Test\CommandArgTest::testValidRegExs"/>
      </line>
      <line nr="122">
        <covered by="Motley\Test\CommandArgTest::testSetGetIsFile"/>
      </line>
      <line nr="123">
        <covered by="Motley\Test\CommandArgTest::testSetGetIsFile"/>
      </line>
      <line nr="124">
        <covered by="Motley\Test\CommandArgTest::testSetGetIsFile"/>
      </line>
      <line nr="125">
        <covered by="Motley\Test\CommandArgTest::testSetGetIsFile"/>
      </line>
      <line nr="126">
        <covered by="Motley\Test\CommandArgTest::testSetGetIsFile"/>
      </line>
      <line nr="127">
        <covered by="Motley\Test\CommandArgTest::testSetGetIsFile"/>
      </line>
      <line nr="128">
        <covered by="Motley\Test\CommandArgTest::testSetGetIsFile"/>
      </line>
      <line nr="129">
        <covered by="Motley\Test\CommandArgTest::testSetGetIsFile"/>
      </line>
      <line nr="130">
        <covered by="Motley\Test\CommandArgTest::testSetGetIsFile"/>
      </line>
      <line nr="131">
        <covered by="Motley\Test\CommandArgTest::testSetGetIsFile"/>
      </line>
      <line nr="132">
        <covered by="Motley\Test\CommandArgTest::testSetGetIsFile"/>
      </line>
      <line nr="133">
        <covered by="Motley\Test\CommandArgTest::testSetGetIsFile"/>
      </line>
      <line nr="134">
        <covered by="Motley\Test\CommandArgTest::testSetGetIsFile"/>
      </line>
      <line nr="135">
        <covered by="Motley\Test\CommandArgTest::testSetGetIsFile"/>
      </line>
      <line nr="136">
        <covered by="Motley\Test\CommandArgTest::testSetGetIsFile"/>
      </line>
      <line nr="137">
        <covered by="Motley\Test\CommandArgTest::testSetGetIsFile"/>
      </line>
      <line nr="138">
        <covered by="Motley\Test\CommandArgTest::testSetGetIsFile"/>
      </line>
      <line nr="139">
        <covered by="Motley\Test\CommandArgTest::testSetGetIsFile"/>
      </line>
      <line nr="140">
        <covered by="Motley\Test\CommandArgTest::testSetGetIsFile"/>
      </line>
      <line nr="141">
        <covered by="Motley\Test\CommandArgTest::testSetGetIsFile"/>
      </line>
      <line nr="142">
        <covered by="Motley\Test\CommandArgTest::testSetGetIsFile"/>
      </line>
      <line nr="146">
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
      </line>
      <line nr="147">
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
      </line>
      <line nr="148">
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
      </line>
      <line nr="149">
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
      </line>
      <line nr="150">
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
      </line>
      <line nr="151">
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
      </line>
      <line nr="153">
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
      </line>
      <line nr="154">
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
      </line>
      <line nr="155">
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
      </line>
      <line nr="156">
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
      </line>
      <line nr="157">
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
      </line>
      <line nr="159">
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
      </line>
      <line nr="160">
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
      </line>
      <line nr="161">
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
      </line>
      <line nr="162">
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
      </line>
      <line nr="163">
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
      </line>
      <line nr="165">
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
      </line>
      <line nr="166">
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
      </line>
      <line nr="167">
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
      </line>
      <line nr="168">
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
      </line>
      <line nr="169">
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
      </line>
      <line nr="170">
        <covered by="Motley\Test\CommandArgTest::testArgValues"/>
      </line>
      <line nr="174">
        <covered by="Motley\Test\CommandArgTest::testGoodCheckRegEx"/>
      </line>
      <line nr="175">
        <covered by="Motley\Test\CommandArgTest::testGoodCheckRegEx"/>
      </line>
      <line nr="176">
        <covered by="Motley\Test\CommandArgTest::testGoodCheckRegEx"/>
      </line>
      <line nr="180">
        <covered by="Motley\Test\CommandArgTest::testBadCheckRegEx"/>
      </line>
      <line nr="181">
        <covered by="Motley\Test\CommandArgTest::testBadCheckRegEx"/>
      </line>
      <line nr="182">
        <covered by="Motley\Test\CommandArgTest::testBadCheckRegEx"/>
      </line>
      <line nr="183">
        <covered by="Motley\Test\CommandArgTest::testBadCheckRegEx"/>
      </line>
      <line nr="184">
        <covered by="Motley\Test\CommandArgTest::testBadCheckRegEx"/>
      </line>
      <line nr="185">
        <covered by="Motley\Test\CommandArgTest::testBadCheckRegEx"/>
      </line>
      <line nr="189">
        <covered by="Motley\Test\CommandArgTest::testValidate"/>
      </line>
      <line nr="190">
        <covered by="Motley\Test\CommandArgTest::testValidate"/>
      </line>
      <line nr="191">
        <covered by="Motley\Test\CommandArgTest::testValidate"/>
      </line>
      <line nr="192">
        <covered by="Motley\Test\CommandArgTest::testValidate"/>
      </line>
      <line nr="193">
        <covered by="Motley\Test\CommandArgTest::testValidate"/>
      </line>
      <line nr="194">
        <covered by="Motley\Test\CommandArgTest::testValidate"/>
      </line>
      <line nr="195">
        <covered by="Motley\Test\CommandArgTest::testValidate"/>
      </line>
      <line nr="196">
        <covered by="Motley\Test\CommandArgTest::testValidate"/>
      </line>
      <line nr="197">
        <covered by="Motley\Test\CommandArgTest::testValidate"/>
      </line>
      <line nr="198">
        <covered by="Motley\Test\CommandArgTest::testValidate"/>
      </line>
      <line nr="199">
        <covered by="Motley\Test\CommandArgTest::testValidate"/>
      </line>
      <line nr="200">
        <covered by="Motley\Test\CommandArgTest::testValidate"/>
      </line>
      <line nr="201">
        <covered by="Motley\Test\CommandArgTest::testValidate"/>
      </line>
      <line nr="202">
        <covered by="Motley\Test\CommandArgTest::testValidate"/>
      </line>
      <line nr="203">
        <covered by="Motley\Test\CommandArgTest::testValidate"/>
      </line>
      <line nr="204">
        <covered by="Motley\Test\CommandArgTest::testValidate"/>
      </line>
      <line nr="205">
        <covered by="Motley\Test\CommandArgTest::testValidate"/>
      </line>
      <line nr="206">
        <covered by="Motley\Test\CommandArgTest::testValidate"/>
      </line>
      <line nr="207">
        <covered by="Motley\Test\CommandArgTest::testValidate"/>
      </line>
      <line nr="208">
        <covered by="Motley\Test\CommandArgTest::testValidate"/>
      </line>
      <line nr="209">
        <covered by="Motley\Test\CommandArgTest::testValidate"/>
      </line>
      <line nr="210">
        <covered by="Motley\Test\CommandArgTest::testValidate"/>
      </line>
      <line nr="211">
        <covered by="Motley\Test\CommandArgTest::testValidate"/>
      </line>
      <line nr="215">
        <covered by="Motley\Test\CommandArgTest::testSetGetDisplayName"/>
      </line>
      <line nr="216">
        <covered by="Motley\Test\CommandArgTest::testSetGetDisplayName"/>
      </line>
      <line nr="217">
        <covered by="Motley\Test\CommandArgTest::testSetGetDisplayName"/>
      </line>
      <line nr="218">
        <covered by="Motley\Test\CommandArgTest::testSetGetDisplayName"/>
      </line>
      <line nr="219">
        <covered by="Motley\Test\CommandArgTest::testSetGetDisplayName"/>
      </line>
      <line nr="220">
        <covered by="Motley\Test\CommandArgTest::testSetGetDisplayName"/>
      </line>
      <line nr="221">
        <covered by="Motley\Test\CommandArgTest::testSetGetDisplayName"/>
      </line>
      <line nr="222">
        <covered by="Motley\Test\CommandArgTest::testSetGetDisplayName"/>
      </line>
      <line nr="226">
        <covered by="Motley\Test\CommandArgTest::testSetGetDefaultValue"/>
      </line>
      <line nr="227">
        <covered by="Motley\Test\CommandArgTest::testSetGetDefaultValue"/>
      </line>
      <line nr="228">
        <covered by="Motley\Test\CommandArgTest::testSetGetDefaultValue"/>
      </line>
      <line nr="229">
        <covered by="Motley\Test\CommandArgTest::testSetGetDefaultValue"/>
      </line>
      <line nr="230">
        <covered by="Motley\Test\CommandArgTest::testSetGetDefaultValue"/>
      </line>
      <line nr="231">
        <covered by="Motley\Test\CommandArgTest::testSetGetDefaultValue"/>
      </line>
      <line nr="232">
        <covered by="Motley\Test\CommandArgTest::testSetGetDefaultValue"/>
      </line>
      <line nr="233">
        <covered by="Motley\Test\CommandArgTest::testSetGetDefaultValue"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_COMMENT">/// Source code file for Motley::Test::CommandArgTest unit testing class.</token>
      </line>
      <line no="3">
        <token name="T_COMMENT">/// @copyright Copyright (c) 2017, Eric Alan Christiansen.</token>
      </line>
      <line no="4">
        <token name="T_COMMENT">/// MIT License. See &lt;https://opensource.org/licenses/MIT&gt;.</token>
      </line>
      <line no="5">
        <token name="T_COMMENT">/// @file</token>
      </line>
      <line no="6">
        <token name="T_COMMENT">### Note: This file uses Uses doxygen style annotation comments.</token>
      </line>
      <line no="7">
        <token name="T_COMMENT">### Note: This file possibly includes some PHPUnit comment directives.</token>
      </line>
      <line no="8">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Test</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9"/>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHPUnit</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Framework</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Testcase</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">CommandArg</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12"/>
      <line no="13">
        <token name="T_COMMENT">/// Tests the Motley::CommandArg class.</token>
      </line>
      <line no="14">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandArgTest</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Testcase</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="15"/>
      <line no="16">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Test instantiation.</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testNew</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandArg</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertInstanceOf</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">CommandArg</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg2</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandArg</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"arg2"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertInstanceOf</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">CommandArg</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$arg2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg3</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandArg</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"arg3"</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"A test instance."</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertInstanceOf</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">CommandArg</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$arg3</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="25"/>
      <line no="26">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Test overridden getDisplayName function.</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testGetDisplayName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1name</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"arg1"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandArg</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1name</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$exp1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'&lt;'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$arg1name</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'&gt;'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$exp1</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDisplayName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$dispName</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'&lt;MyArgument&gt;'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setDisplayName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$dispName</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$dispName</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDisplayName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="36"/>
      <line no="37">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Test valid literals and validate functions.</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testValidLiterals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandArg</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"arg1"</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"arg1 description."</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$lit1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"aaa"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$lit2</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"bbb"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$lit3</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"ccc"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$lit1desc</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"aaa description."</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$lit2desc</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"bbb description."</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$lit3desc</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"ccc description."</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$invalid1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"bork"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$invalid2</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">""</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arr1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$lit1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arr2</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$lit2</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$lit3</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arr3</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_merge</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arr1</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$arr2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getValidLiterals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">addValidLiteral</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$lit1</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$lit1desc</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getValidLiterals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arr1</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getValidLiterals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">addValidLiteral</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$lit1</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$lit1desc</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_COMMENT">// try adding dup (mostly ignored)</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getValidLiterals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arr1</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getValidLiterals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">addValidLiteral</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$lit2</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$lit2desc</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">addValidLiteral</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$lit3</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$lit3desc</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arr3</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getValidLiterals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># get back some descriptions</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$descs</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getValidLitDescs</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$lit1desc</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$descs</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$lit1</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$lit2desc</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$descs</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$lit2</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="65">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$lit3desc</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$descs</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$lit3</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="66">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># try some validations</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertTrue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$lit1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertTrue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$lit2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertTrue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$lit3</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$invalid1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$invalid2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">clearValidLiterals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getValidLiterals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="74">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="75"/>
      <line no="76">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Test valid regular expressions and validate functions.</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testValidRegExs</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="78">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandArg</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"arg1"</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"arg1 description."</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$pat1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/^[0-9]+$/'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="80">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$pat2</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/^[a-z]+$/'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$pat3</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/^[0-9]{4}\-[0-9]{2}\-[0-9]{2}$/'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="82">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$pat1desc</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Numeric description."</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="83">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$pat2desc</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Lower description."</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$pat3desc</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Date description."</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="85">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$valid1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"42"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$valid2</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"abc"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$valid3</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"2017-07-23"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$invalid1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"abc2"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="89">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$invalid2</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"aBc"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$invalid3</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">""</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="91">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arr1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$pat1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="92">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arr2</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$pat2</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$pat3</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="93">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arr3</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_merge</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arr1</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$arr2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="94">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getValidRegExs</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="95">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">addValidRegEx</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$pat1</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$pat1desc</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getValidRegExs</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arr1</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getValidRegExs</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">addValidRegEx</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$pat1</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$pat1desc</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_COMMENT">// try adding duplicate</token>
      </line>
      <line no="99">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getValidRegExs</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="100">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arr1</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getValidRegExs</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">addValidRegEx</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$pat2</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$pat2desc</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">addValidRegEx</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$pat3</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$pat3desc</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arr3</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getValidRegExs</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="104">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># check the descriptions</token>
      </line>
      <line no="105">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$descs</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getValidRxDescs</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="106">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$pat1desc</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$descs</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$pat1</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="107">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$pat2desc</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$descs</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$pat2</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="108">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$pat3desc</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$descs</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$pat3</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="109">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># try some validations</token>
      </line>
      <line no="110">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertTrue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$valid1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="111">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertTrue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$valid2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="112">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertTrue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$valid3</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="113">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$invalid1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="114">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$invalid2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="115">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$invalid3</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="116">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">clearValidRegExs</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="117">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getValidRegExs</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="118">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="119"/>
      <line no="120">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Test set/get isFile functions.</token>
      </line>
      <line no="121">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testSetGetIsFile</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="122">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandArg</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"arg1"</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"arg1 description."</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="123">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getIsFile</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="124">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getFileMustExist</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="125">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getFileMustNotExist</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="126">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setIsFile</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="127">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertTrue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getIsFile</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="128">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getFileMustExist</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="129">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getFileMustNotExist</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="130">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setIsFile</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">false</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="131">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getIsFile</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="132">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getFileMustExist</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="133">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getFileMustNotExist</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="134">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setIsFile</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">true</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="135">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertTrue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getIsFile</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="136">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertTrue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getFileMustExist</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="137">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getFileMustNotExist</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="138">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setIsFile</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">true</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">false</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="139">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertTrue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getIsFile</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="140">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getFileMustExist</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="141">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertTrue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getFileMustNotExist</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="142">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="143"/>
      <line no="144">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Test arg value and arg message functions.</token>
      </line>
      <line no="145">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testArgValues</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="146">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandArg</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"arg1"</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"arg1 description."</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="147">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">addValidRegEx</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/^[0-9a-z]*$/'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="148">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$expVals</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="149">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">""</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getLastParamValue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="150">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">""</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getLastParamMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="151">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getLastParamIsValid</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="152">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># validate a valid value</token>
      </line>
      <line no="153">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$val</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"42"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="154">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertTrue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$val</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="155">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertTrue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getLastParamIsValid</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="156">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$val</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getLastParamValue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="157">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertRegExp</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/^VALID.*$/'</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getLastParamMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="158">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># validate another valid value</token>
      </line>
      <line no="159">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$val</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"good"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="160">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertTrue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$val</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="161">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertTrue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getLastParamIsValid</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="162">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$val</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getLastParamValue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="163">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertRegExp</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/^VALID.*$/'</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getLastParamMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="164">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># validate an invalid value</token>
      </line>
      <line no="165">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$val</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"BAD"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="166">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$val</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="167">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getLastParamIsValid</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="168">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$val</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getLastParamValue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="169">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertRegExp</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/^INVALID.*$/'</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getLastParamMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="170">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="171"/>
      <line no="172">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Test good checkRegEx.</token>
      </line>
      <line no="173">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testGoodCheckRegEx</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="174">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandArg</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"arg1"</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"arg1 description."</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="175">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertTrue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">checkRegEx</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/^[0-9]+$/'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="176">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="177"/>
      <line no="178">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Test bad checkRegEx.</token>
      </line>
      <line no="179">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testBadCheckRegEx</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="180">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandArg</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"arg1"</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"arg1 description."</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="181">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$saveErrorReporting</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">error_reporting</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT"># turn off error reporting</token>
      </line>
      <line no="182">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$check</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">checkRegEx</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/^[0-9]+$'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_COMMENT"># no '/' terminator</token>
      </line>
      <line no="183">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">error_reporting</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$saveErrorReporting</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT"># turn error reporting back on</token>
      </line>
      <line no="184">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$check</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="185">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="186"/>
      <line no="187">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Test more validate cases.</token>
      </line>
      <line no="188">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testValidate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="189">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandArg</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"arg1"</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"arg1 description."</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="190">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertTrue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"anything"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="191">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">addValidLiteral</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"aaa"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="192">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">addValidRegEx</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/^bbb$/'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="193">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertTrue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"aaa"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="194">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertTrue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"bbb"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="195">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"ccc"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="196">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandArg</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"arg1"</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"arg1 description."</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="197">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">addValidRegEx</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/^bbb$/'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="198">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"ccc"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="199">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandArg</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"arg1"</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"arg1 description."</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="200">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$existingFile</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FILE">__FILE__</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="201">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$nonexistingFile</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"a-non-existing-file.bork"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="202">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setIsFile</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="203">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertTrue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$existingFile</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="204">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertTrue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$nonexistingFile</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="205">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setIsFile</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">true</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="206">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertTrue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$existingFile</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="207">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$nonexistingFile</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="208">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setIsFile</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">true</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">false</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="209">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$existingFile</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="210">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertTrue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$nonexistingFile</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="211">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="212"/>
      <line no="213">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Test set/get display name functions.</token>
      </line>
      <line no="214">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testSetGetDisplayName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="215">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1Name</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Normal Name"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="216">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1DisplayName</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Display Name"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="217">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandArg</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1Name</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="218">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$exp</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"&lt;Normal_Name&gt;"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="219">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$exp</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDisplayName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="220">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setDisplayName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1DisplayName</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="221">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1DisplayName</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDisplayName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="222">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="223"/>
      <line no="224">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Test set/get default value</token>
      </line>
      <line no="225">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testSetGetDefaultValue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="226">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandArg</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"arg"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="227">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">""</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$arg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDefaultValue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="228">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$defVal</token>
        <token name="T_EQUAL">=</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"bork"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="229">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setDefaultValue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$defVal</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="230">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$defVal</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$arg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDefaultValue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="231">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"-"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">// shorthand for default value</token>
      </line>
      <line no="232">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$defVal</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$arg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getLastParamValue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="233">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="234"/>
      <line no="235">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="236">
        <token name="T_CLOSE_TAG">?&gt;</token>
      </line>
      <line no="237"/>
    </source>
  </file>
</phpunit>
