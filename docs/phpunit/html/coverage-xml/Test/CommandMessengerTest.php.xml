<?xml version="1.0"?>
<phpunit xmlns="http://schema.phpunit.de/coverage/1.0">
  <file name="CommandMessengerTest.php" path="/Test">
    <totals>
      <lines total="118" comments="42" code="76" executable="70" executed="70" percent="100.00"/>
      <methods count="5" tested="5" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="CommandMessengerTest" start="16" executable="70" executed="70" crap="9">
      <package full="" name="" sub="" category=""/>
      <namespace name="Motley\Test"/>
      <method name="setUp" signature="setUp()" start="21" end="23" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="tearDown" signature="tearDown()" start="26" end="36" crap="3" executable="4" executed="4" coverage="100"/>
      <method name="testNew" signature="testNew()" start="39" end="42" crap="1" executable="3" executed="3" coverage="100"/>
      <method name="testSetGetErrorExitLevel" signature="testSetGetErrorExitLevel()" start="45" end="52" crap="1" executable="7" executed="7" coverage="100"/>
      <method name="testEndUserMessaging" signature="testEndUserMessaging()" start="55" end="115" crap="3" executable="54" executed="54" coverage="100"/>
    </class>
    <coverage>
      <line nr="22">
        <covered by="Motley\Test\CommandMessengerTest::testNew"/>
        <covered by="Motley\Test\CommandMessengerTest::testSetGetErrorExitLevel"/>
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="23">
        <covered by="Motley\Test\CommandMessengerTest::testNew"/>
        <covered by="Motley\Test\CommandMessengerTest::testSetGetErrorExitLevel"/>
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="27">
        <covered by="Motley\Test\CommandMessengerTest::testNew"/>
        <covered by="Motley\Test\CommandMessengerTest::testSetGetErrorExitLevel"/>
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="33">
        <covered by="Motley\Test\CommandMessengerTest::testNew"/>
        <covered by="Motley\Test\CommandMessengerTest::testSetGetErrorExitLevel"/>
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="34">
        <covered by="Motley\Test\CommandMessengerTest::testNew"/>
        <covered by="Motley\Test\CommandMessengerTest::testSetGetErrorExitLevel"/>
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="36">
        <covered by="Motley\Test\CommandMessengerTest::testNew"/>
        <covered by="Motley\Test\CommandMessengerTest::testSetGetErrorExitLevel"/>
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="40">
        <covered by="Motley\Test\CommandMessengerTest::testNew"/>
      </line>
      <line nr="41">
        <covered by="Motley\Test\CommandMessengerTest::testNew"/>
      </line>
      <line nr="42">
        <covered by="Motley\Test\CommandMessengerTest::testNew"/>
      </line>
      <line nr="46">
        <covered by="Motley\Test\CommandMessengerTest::testSetGetErrorExitLevel"/>
      </line>
      <line nr="47">
        <covered by="Motley\Test\CommandMessengerTest::testSetGetErrorExitLevel"/>
      </line>
      <line nr="48">
        <covered by="Motley\Test\CommandMessengerTest::testSetGetErrorExitLevel"/>
      </line>
      <line nr="49">
        <covered by="Motley\Test\CommandMessengerTest::testSetGetErrorExitLevel"/>
      </line>
      <line nr="50">
        <covered by="Motley\Test\CommandMessengerTest::testSetGetErrorExitLevel"/>
      </line>
      <line nr="51">
        <covered by="Motley\Test\CommandMessengerTest::testSetGetErrorExitLevel"/>
      </line>
      <line nr="52">
        <covered by="Motley\Test\CommandMessengerTest::testSetGetErrorExitLevel"/>
      </line>
      <line nr="56">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="57">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="58">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="59">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="60">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="61">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="62">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="63">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="64">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="65">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="66">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="67">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="68">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="69">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="70">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="71">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="72">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="73">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="74">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="75">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="77">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="79">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="80">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="81">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="82">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="83">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="84">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="85">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="86">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="87">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="88">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="89">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="90">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="91">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="92">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="93">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="94">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="97">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="98">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="99">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="100">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="101">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="102">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="103">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="104">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="105">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="106">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="107">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="108">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="109">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="112">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="113">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="114">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
      <line nr="115">
        <covered by="Motley\Test\CommandMessengerTest::testEndUserMessaging"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_COMMENT">/// Source code file for Motley::Test::CommandMessengerTest unit testing class.</token>
      </line>
      <line no="3">
        <token name="T_COMMENT">/// @copyright Copyright (c) 2017, Eric Alan Christiansen.</token>
      </line>
      <line no="4">
        <token name="T_COMMENT">/// MIT License. See &lt;https://opensource.org/licenses/MIT&gt;.</token>
      </line>
      <line no="5">
        <token name="T_COMMENT">/// @file</token>
      </line>
      <line no="6">
        <token name="T_COMMENT">### Note: This file uses Uses doxygen style annotation comments.</token>
      </line>
      <line no="7">
        <token name="T_COMMENT">### Note: This file possibly includes some PHPUnit comment directives.</token>
      </line>
      <line no="8">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Test</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9"/>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHPUnit</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Framework</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Testcase</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">CommandMessenger</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">GuidGenerator</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="14"/>
      <line no="15">
        <token name="T_COMMENT">/// Tests the Motley::CommandMessenger class.</token>
      </line>
      <line no="16">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandMessengerTest</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Testcase</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tmpdir</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DIR">__DIR__</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/tmp'</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_COMMENT">///&lt; Root of temporary directory.</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$lastUnit</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_COMMENT">///&lt; Last interesting UnitTestSupport instance.</token>
      </line>
      <line no="19"/>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// A unit test set-up function.</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setUp</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">lastUnit</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="24"/>
      <line no="25">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// A unit test tear-down function.</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">tearDown</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_VARIABLE">$captureHandlerSet</token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// @codeCoverageIgnoreStart</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">restore_error_handler</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_VARIABLE">$captureHandlerSet</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// @codeCoverageIgnoreEnd</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">is_null</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">lastUnit</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">lastUnit</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">cleanupTmp</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="37"/>
      <line no="38">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Test instantiation.</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testNew</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandMessenger</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertInstanceOf</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">CommandMessenger</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="43"/>
      <line no="44">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Test set/get error exit level.</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testSetGetErrorExitLevel</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandMessenger</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$exp1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandMessenger</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ERROR_DIE_LVL</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$exp1</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getErrorExitLevel</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$exp2</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandMessenger</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ERROR_ERROR_LVL</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setErrorExitLevel</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$exp2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$exp2</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getErrorExitLevel</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="53"/>
      <line no="54">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// test end-user message funtions.</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testEndUserMessaging</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandMessenger</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$unt</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">lastUnit</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$verboType</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandMessenger</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">VERBO_MSG</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$errorType</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandMessenger</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ERROR_MSG</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$debugType</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandMessenger</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">DEBUG_MSG</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$msgTypes</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$verboType</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$errorType</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$debugType</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$tmpdir</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">lastUnit</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">createTmpRootDir</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$subdir</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">lastUnit</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">createTmpSubDir</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$verboFile</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_VARIABLE">$subdir</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">/verbo.out</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="65">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$errorFile</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_VARIABLE">$subdir</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">/error.out</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="66">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$debugFile</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_VARIABLE">$subdir</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">/debug.out</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setOutputDestination</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$verboType</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$verboFile</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$verboDest</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOutputDestination</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$verboType</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$verboFile</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$verboDest</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setOutputDestination</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$errorType</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$errorFile</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$errorDest</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOutputDestination</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$errorType</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$errorFile</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$errorDest</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setOutputDestination</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$debugType</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$debugFile</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="74">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$debugDest</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOutputDestination</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$debugType</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="75">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$debugFile</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$debugDest</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># disable actual dying.</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setErrorExitLevel</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">CommandMessenger</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ERROR_DIE_LVL</token>
        <token name="T_PLUS">+</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_COMMENT">// do not die</token>
      </line>
      <line no="78">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># try filtered messaging</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setDisplayLevel</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$verboType</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">CommandMessenger</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">VERBOSITY_NONE_LVL</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="80">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setDisplayLevel</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$errorType</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">CommandMessenger</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ERROR_NONE_LVL</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setDisplayLevel</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$debugType</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">CommandMessenger</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">DEBUG_NONE_LVL</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="82">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDisplayLevel</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$verboType</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="83">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDisplayLevel</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$errorType</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDisplayLevel</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$debugType</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="85">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">infoMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Info message 1."</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">verboseMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Verbose message 1."</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">warningMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Warning message 1."</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">errorMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Error message 1."</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="89">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">dieMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Die message 1."</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">debugMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Debug message 1."</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="91">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">verboseDebugMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Verbose debug message 1"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="92">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$msgTypes</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$msgType</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="93">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$dest</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOutputDestination</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$msgType</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="94">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertFileNotExists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$dest</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="95">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># try unfiltered messaging</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setDisplayLevel</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$verboType</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">CommandMessenger</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">VERBOSITY_ALL_LVL</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setDisplayLevel</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$errorType</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">CommandMessenger</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ERROR_ALL_LVL</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="99">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setDisplayLevel</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$debugType</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">CommandMessenger</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">DEBUG_ALL_LVL</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="100">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">infoMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Info message 1."</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">verboseMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Verbose message 1."</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">warningMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Warning message 1."</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">errorMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Error message 1."</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="104">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">dieMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Die message 1."</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="105">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">debugMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Debug message 1."</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="106">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">verboseDebugMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Verbose debug message 1"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="107">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$msgTypes</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$msgType</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="108">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$dest</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOutputDestination</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$msgType</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="109">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertFileExists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$dest</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="110">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="111">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># try resetting verbo output destination</token>
      </line>
      <line no="112">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setOutputDestination</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$verboType</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">CommandMessenger</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">DEFAULT_VERBO_DEST</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="113">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$verboDest</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOutputDestination</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$verboType</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="114">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">CommandMessenger</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">DEFAULT_VERBO_DEST</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$verboDest</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="115">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="116"/>
      <line no="117">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="118">
        <token name="T_CLOSE_TAG">?&gt;</token>
      </line>
      <line no="119"/>
    </source>
  </file>
</phpunit>
