<?xml version="1.0"?>
<phpunit xmlns="http://schema.phpunit.de/coverage/1.0">
  <file name="GuidGeneratorTest.php" path="/Test">
    <totals>
      <lines total="62" comments="24" code="38" executable="29" executed="29" percent="100.00"/>
      <methods count="4" tested="4" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="GuidGeneratorTest" start="16" executable="29" executed="29" crap="4">
      <package full="" name="" sub="" category=""/>
      <namespace name="Motley\Test"/>
      <method name="testNewGuidGenerator" signature="testNewGuidGenerator()" start="21" end="27" crap="1" executable="6" executed="6" coverage="100"/>
      <method name="testGlobalGuidGenerator" signature="testGlobalGuidGenerator()" start="30" end="34" crap="1" executable="4" executed="4" coverage="100"/>
      <method name="testLowerNoDashes" signature="testLowerNoDashes()" start="37" end="51" crap="1" executable="14" executed="14" coverage="100"/>
      <method name="testUpperNoDashes" signature="testUpperNoDashes()" start="54" end="59" crap="1" executable="5" executed="5" coverage="100"/>
    </class>
    <coverage>
      <line nr="22">
        <covered by="Motley\Test\GuidGeneratorTest::testNewGuidGenerator"/>
      </line>
      <line nr="23">
        <covered by="Motley\Test\GuidGeneratorTest::testNewGuidGenerator"/>
      </line>
      <line nr="24">
        <covered by="Motley\Test\GuidGeneratorTest::testNewGuidGenerator"/>
      </line>
      <line nr="25">
        <covered by="Motley\Test\GuidGeneratorTest::testNewGuidGenerator"/>
      </line>
      <line nr="26">
        <covered by="Motley\Test\GuidGeneratorTest::testNewGuidGenerator"/>
      </line>
      <line nr="27">
        <covered by="Motley\Test\GuidGeneratorTest::testNewGuidGenerator"/>
      </line>
      <line nr="31">
        <covered by="Motley\Test\GuidGeneratorTest::testGlobalGuidGenerator"/>
      </line>
      <line nr="32">
        <covered by="Motley\Test\GuidGeneratorTest::testGlobalGuidGenerator"/>
      </line>
      <line nr="33">
        <covered by="Motley\Test\GuidGeneratorTest::testGlobalGuidGenerator"/>
      </line>
      <line nr="34">
        <covered by="Motley\Test\GuidGeneratorTest::testGlobalGuidGenerator"/>
      </line>
      <line nr="38">
        <covered by="Motley\Test\GuidGeneratorTest::testLowerNoDashes"/>
      </line>
      <line nr="39">
        <covered by="Motley\Test\GuidGeneratorTest::testLowerNoDashes"/>
      </line>
      <line nr="40">
        <covered by="Motley\Test\GuidGeneratorTest::testLowerNoDashes"/>
      </line>
      <line nr="41">
        <covered by="Motley\Test\GuidGeneratorTest::testLowerNoDashes"/>
      </line>
      <line nr="42">
        <covered by="Motley\Test\GuidGeneratorTest::testLowerNoDashes"/>
      </line>
      <line nr="43">
        <covered by="Motley\Test\GuidGeneratorTest::testLowerNoDashes"/>
      </line>
      <line nr="44">
        <covered by="Motley\Test\GuidGeneratorTest::testLowerNoDashes"/>
      </line>
      <line nr="45">
        <covered by="Motley\Test\GuidGeneratorTest::testLowerNoDashes"/>
      </line>
      <line nr="46">
        <covered by="Motley\Test\GuidGeneratorTest::testLowerNoDashes"/>
      </line>
      <line nr="47">
        <covered by="Motley\Test\GuidGeneratorTest::testLowerNoDashes"/>
      </line>
      <line nr="48">
        <covered by="Motley\Test\GuidGeneratorTest::testLowerNoDashes"/>
      </line>
      <line nr="49">
        <covered by="Motley\Test\GuidGeneratorTest::testLowerNoDashes"/>
      </line>
      <line nr="50">
        <covered by="Motley\Test\GuidGeneratorTest::testLowerNoDashes"/>
      </line>
      <line nr="51">
        <covered by="Motley\Test\GuidGeneratorTest::testLowerNoDashes"/>
      </line>
      <line nr="55">
        <covered by="Motley\Test\GuidGeneratorTest::testUpperNoDashes"/>
      </line>
      <line nr="56">
        <covered by="Motley\Test\GuidGeneratorTest::testUpperNoDashes"/>
      </line>
      <line nr="57">
        <covered by="Motley\Test\GuidGeneratorTest::testUpperNoDashes"/>
      </line>
      <line nr="58">
        <covered by="Motley\Test\GuidGeneratorTest::testUpperNoDashes"/>
      </line>
      <line nr="59">
        <covered by="Motley\Test\GuidGeneratorTest::testUpperNoDashes"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_COMMENT">/// Source code file for Motley::Test::GuidGeneratorTest unit testing class.</token>
      </line>
      <line no="3">
        <token name="T_COMMENT">/// @copyright Copyright (c) 2017, Eric Alan Christiansen.</token>
      </line>
      <line no="4">
        <token name="T_COMMENT">/// MIT License. See &lt;https://opensource.org/licenses/MIT&gt;.</token>
      </line>
      <line no="5">
        <token name="T_COMMENT">/// @file</token>
      </line>
      <line no="6">
        <token name="T_COMMENT">### Note: This file uses Uses doxygen style annotation comments.</token>
      </line>
      <line no="7">
        <token name="T_COMMENT">### Note: This file possibly includes some PHPUnit comment directives.</token>
      </line>
      <line no="8">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Test</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9"/>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHPUnit</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Framework</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Testcase</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">GuidGenerator</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12"/>
      <line no="13">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="14">
        <token name="T_DOC_COMMENT"> * Tests the Motley::GuidGenerator class.</token>
      </line>
      <line no="15">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="16">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">GuidGeneratorTest</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Testcase</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="17"/>
      <line no="18">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="19">
        <token name="T_DOC_COMMENT">     * Test instantiating separate instances.</token>
      </line>
      <line no="20">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testNewGuidGenerator</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$guidGen1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">GuidGenerator</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$guidGen2</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">GuidGenerator</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$guidGen1</token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_VARIABLE">$guidGen2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$guidGen3</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">GuidGenerator</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$guidGen4</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">GuidGenerator</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">true</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="28"/>
      <line no="29">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Test getting the common global instance.</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testGlobalGuidGenerator</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$guidGen1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">GuidGenerator</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">getGlobalGuidGenerator</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$guidGen2</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">GuidGenerator</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">getGlobalGuidGenerator</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertTrue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$guidGen1</token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_VARIABLE">$guidGen2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="35"/>
      <line no="36">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Test generating a guid in lowercase with no dashes.</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testLowerNoDashes</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$guidGen</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">GuidGenerator</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$guidGen</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getUpperFlag</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$guidGen</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDashesFlag</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$guidGen</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setUpperFlag</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">TRUE</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$guidGen</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setDashesFlag</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">TRUE</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertTrue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$guidGen</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getUpperFlag</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertTrue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$guidGen</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDashesFlag</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$guidGen</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setUpperFlag</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">FALSE</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$guidGen</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setDashesFlag</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">FALSE</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$guidGen</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getUpperFlag</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$guidGen</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDashesFlag</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$guid</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$guidGen</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">generateGuid</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertRegExp</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/^[0-9a-f]{32}$/'</token>
        <token name="T_COMMA">,</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_VARIABLE">$guid</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="52"/>
      <line no="53">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Test generating a guid in uppercase with no dashes.</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testUpperNoDashes</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertNotNull</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$guidGen</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">GuidGenerator</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">TRUE</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertTrue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$guidGen</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getUpperFlag</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$guidGen</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDashesFlag</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$guid</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$guidGen</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">generateGuid</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="60"/>
      <line no="61">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="62">
        <token name="T_CLOSE_TAG">?&gt;</token>
      </line>
      <line no="63"/>
    </source>
  </file>
</phpunit>
