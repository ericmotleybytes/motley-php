<?xml version="1.0"?>
<phpunit xmlns="http://schema.phpunit.de/coverage/1.0">
  <file name="ZzzSampleClass.php" path="/Test">
    <totals>
      <lines total="63" comments="54" code="9" executable="6" executed="6" percent="100.00"/>
      <methods count="6" tested="6" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="ZzzSampleClass" start="15" executable="6" executed="6" crap="7">
      <package full="" name="" sub="" category=""/>
      <namespace name="Motley\Test"/>
      <method name="__construct" signature="__construct()" start="24" end="24" crap="1" executable="0" executed="0" coverage="100"/>
      <method name="publicFunction" signature="publicFunction() : string" start="28" end="30" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="protectedFunction" signature="protectedFunction() : string" start="34" end="36" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="privateFunction" signature="privateFunction() : string" start="40" end="42" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="staticPublicFunction" signature="staticPublicFunction() : string" start="46" end="48" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="staticProtectedFunction" signature="staticProtectedFunction() : string" start="52" end="54" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="staticPrivateFunction" signature="staticPrivateFunction() : string" start="58" end="60" crap="1" executable="1" executed="1" coverage="100"/>
    </class>
    <coverage>
      <line nr="29">
        <covered by="Motley\Test\UnitTestSupportTest::testInvokeFunction"/>
      </line>
      <line nr="35">
        <covered by="Motley\Test\UnitTestSupportTest::testInvokeFunction"/>
      </line>
      <line nr="41">
        <covered by="Motley\Test\UnitTestSupportTest::testInvokeFunction"/>
      </line>
      <line nr="47">
        <covered by="Motley\Test\UnitTestSupportTest::testInvokeFunction"/>
      </line>
      <line nr="53">
        <covered by="Motley\Test\UnitTestSupportTest::testInvokeFunction"/>
      </line>
      <line nr="59">
        <covered by="Motley\Test\UnitTestSupportTest::testInvokeFunction"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_COMMENT">/// Source code file for Motley::Test::ZzzSampleClass unit testing class.</token>
      </line>
      <line no="3">
        <token name="T_COMMENT">/// @copyright Copyright (c) 2017, Eric Alan Christiansen.</token>
      </line>
      <line no="4">
        <token name="T_COMMENT">/// MIT License. See &lt;https://opensource.org/licenses/MIT&gt;.</token>
      </line>
      <line no="5">
        <token name="T_COMMENT">/// @file</token>
      </line>
      <line no="6">
        <token name="T_COMMENT">### Note: This file uses Uses doxygen style annotation comments.</token>
      </line>
      <line no="7">
        <token name="T_COMMENT">### Note: This file possibly includes some PHPUnit comment directives.</token>
      </line>
      <line no="8">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Test</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9"/>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHPUnit</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Framework</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Testcase</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12"/>
      <line no="13">
        <token name="T_COMMENT">/// A class with protected and private methods.</token>
      </line>
      <line no="14">
        <token name="T_COMMENT">/// This allows other classes which use reflection to be more thoroughly tested.</token>
      </line>
      <line no="15">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ZzzSampleClass</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="16">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PUBFUN</token>
        <token name="T_WHITESPACE">    </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Public Function"</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">///&lt; Public function result.</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PROFUN</token>
        <token name="T_WHITESPACE">    </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Protected Function"</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">     </token>
        <token name="T_COMMENT">///&lt; Protected function result.</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PRIFUN</token>
        <token name="T_WHITESPACE">    </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Private Function"</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">       </token>
        <token name="T_COMMENT">///&lt; Private function result.</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">STAPUBFUN</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Static Public Function"</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">///&lt; Static public result.</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">STAPROFUN</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Protected Function"</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">     </token>
        <token name="T_COMMENT">///&lt; Static protected result.</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">STAPRIFUN</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Private Function"</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">       </token>
        <token name="T_COMMENT">///&lt; Static private result.</token>
      </line>
      <line no="22"/>
      <line no="23">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Class constructor.</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="25"/>
      <line no="26">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// A sample public function.</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return A sample string.</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">publicFunction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">PUBFUN</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="31"/>
      <line no="32">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// A sample protected function.</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return A sample string.</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">protectedFunction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">PROFUN</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="37"/>
      <line no="38">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// A sample private function.</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return A sample string.</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">privateFunction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">PRIFUN</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="43"/>
      <line no="44">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// A sample static public function.</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return A sample string.</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">staticPublicFunction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">STAPUBFUN</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="49"/>
      <line no="50">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// A sample static protected function.</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return A sample string.</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">staticProtectedFunction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">STAPROFUN</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="55"/>
      <line no="56">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// A sample static private function.</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return A sample string.</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">staticPrivateFunction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">STAPRIFUN</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="61"/>
      <line no="62">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="63">
        <token name="T_CLOSE_TAG">?&gt;</token>
      </line>
      <line no="64"/>
    </source>
  </file>
</phpunit>
