<?xml version="1.0"?>
<phpunit xmlns="http://schema.phpunit.de/coverage/1.0">
  <file name="UsageFormatterTest.php" path="/Test">
    <totals>
      <lines total="217" comments="68" code="149" executable="153" executed="153" percent="100.00"/>
      <methods count="10" tested="10" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="UsageFormatterTest" start="15" executable="153" executed="153" crap="10">
      <package full="" name="" sub="" category=""/>
      <namespace name="Motley\Test"/>
      <method name="testNew" signature="testNew()" start="18" end="21" crap="1" executable="3" executed="3" coverage="100"/>
      <method name="testClearOutput" signature="testClearOutput()" start="24" end="38" crap="1" executable="14" executed="14" coverage="100"/>
      <method name="testFormatting" signature="testFormatting()" start="41" end="135" crap="1" executable="79" executed="79" coverage="100"/>
      <method name="testSetGetColumnWidth" signature="testSetGetColumnWidth()" start="138" end="144" crap="1" executable="6" executed="6" coverage="100"/>
      <method name="testSetGetLeftIndent" signature="testSetGetLeftIndent()" start="147" end="153" crap="1" executable="6" executed="6" coverage="100"/>
      <method name="testSetGetRightIndent" signature="testSetGetRightIndent()" start="156" end="162" crap="1" executable="6" executed="6" coverage="100"/>
      <method name="testSetGetContIndent" signature="testSetGetContIndent()" start="165" end="171" crap="1" executable="6" executed="6" coverage="100"/>
      <method name="testSetGetMaxLength" signature="testSetGetMaxLength()" start="174" end="185" crap="1" executable="11" executed="11" coverage="100"/>
      <method name="testSetGetEOL" signature="testSetGetEOL()" start="188" end="193" crap="1" executable="5" executed="5" coverage="100"/>
      <method name="testGetSetParam" signature="testGetSetParam()" start="196" end="214" crap="1" executable="17" executed="17" coverage="100"/>
    </class>
    <coverage>
      <line nr="19">
        <covered by="Motley\Test\UsageFormatterTest::testNew"/>
      </line>
      <line nr="20">
        <covered by="Motley\Test\UsageFormatterTest::testNew"/>
      </line>
      <line nr="21">
        <covered by="Motley\Test\UsageFormatterTest::testNew"/>
      </line>
      <line nr="25">
        <covered by="Motley\Test\UsageFormatterTest::testClearOutput"/>
      </line>
      <line nr="26">
        <covered by="Motley\Test\UsageFormatterTest::testClearOutput"/>
      </line>
      <line nr="27">
        <covered by="Motley\Test\UsageFormatterTest::testClearOutput"/>
      </line>
      <line nr="28">
        <covered by="Motley\Test\UsageFormatterTest::testClearOutput"/>
      </line>
      <line nr="29">
        <covered by="Motley\Test\UsageFormatterTest::testClearOutput"/>
      </line>
      <line nr="30">
        <covered by="Motley\Test\UsageFormatterTest::testClearOutput"/>
      </line>
      <line nr="31">
        <covered by="Motley\Test\UsageFormatterTest::testClearOutput"/>
      </line>
      <line nr="32">
        <covered by="Motley\Test\UsageFormatterTest::testClearOutput"/>
      </line>
      <line nr="33">
        <covered by="Motley\Test\UsageFormatterTest::testClearOutput"/>
      </line>
      <line nr="34">
        <covered by="Motley\Test\UsageFormatterTest::testClearOutput"/>
      </line>
      <line nr="35">
        <covered by="Motley\Test\UsageFormatterTest::testClearOutput"/>
      </line>
      <line nr="36">
        <covered by="Motley\Test\UsageFormatterTest::testClearOutput"/>
      </line>
      <line nr="37">
        <covered by="Motley\Test\UsageFormatterTest::testClearOutput"/>
      </line>
      <line nr="38">
        <covered by="Motley\Test\UsageFormatterTest::testClearOutput"/>
      </line>
      <line nr="43">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="44">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="45">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="46">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="47">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="48">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="49">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="50">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="51">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="52">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="53">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="54">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="55">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="56">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="57">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="58">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="59">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="60">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="61">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="62">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="63">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="64">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="65">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="66">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="67">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="69">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="70">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="71">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="72">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="73">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="75">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="76">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="78">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="79">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="81">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="82">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="83">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="84">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="85">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="86">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="87">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="89">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="90">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="92">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="93">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="94">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="96">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="97">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="98">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="99">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="100">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="102">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="103">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="104">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="106">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="107">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="108">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="110">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="111">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="112">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="113">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="114">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="115">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="116">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="117">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="119">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="120">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="121">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="122">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="123">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="125">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="126">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="128">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="129">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="130">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="131">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="133">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="134">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="135">
        <covered by="Motley\Test\UsageFormatterTest::testFormatting"/>
      </line>
      <line nr="139">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetColumnWidth"/>
      </line>
      <line nr="140">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetColumnWidth"/>
      </line>
      <line nr="141">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetColumnWidth"/>
      </line>
      <line nr="142">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetColumnWidth"/>
      </line>
      <line nr="143">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetColumnWidth"/>
      </line>
      <line nr="144">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetColumnWidth"/>
      </line>
      <line nr="148">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetLeftIndent"/>
      </line>
      <line nr="149">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetLeftIndent"/>
      </line>
      <line nr="150">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetLeftIndent"/>
      </line>
      <line nr="151">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetLeftIndent"/>
      </line>
      <line nr="152">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetLeftIndent"/>
      </line>
      <line nr="153">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetLeftIndent"/>
      </line>
      <line nr="157">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetRightIndent"/>
      </line>
      <line nr="158">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetRightIndent"/>
      </line>
      <line nr="159">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetRightIndent"/>
      </line>
      <line nr="160">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetRightIndent"/>
      </line>
      <line nr="161">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetRightIndent"/>
      </line>
      <line nr="162">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetRightIndent"/>
      </line>
      <line nr="166">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetContIndent"/>
      </line>
      <line nr="167">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetContIndent"/>
      </line>
      <line nr="168">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetContIndent"/>
      </line>
      <line nr="169">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetContIndent"/>
      </line>
      <line nr="170">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetContIndent"/>
      </line>
      <line nr="171">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetContIndent"/>
      </line>
      <line nr="175">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetMaxLength"/>
      </line>
      <line nr="176">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetMaxLength"/>
      </line>
      <line nr="177">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetMaxLength"/>
      </line>
      <line nr="178">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetMaxLength"/>
      </line>
      <line nr="179">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetMaxLength"/>
      </line>
      <line nr="180">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetMaxLength"/>
      </line>
      <line nr="181">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetMaxLength"/>
      </line>
      <line nr="182">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetMaxLength"/>
      </line>
      <line nr="183">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetMaxLength"/>
      </line>
      <line nr="184">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetMaxLength"/>
      </line>
      <line nr="185">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetMaxLength"/>
      </line>
      <line nr="189">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetEOL"/>
      </line>
      <line nr="190">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetEOL"/>
      </line>
      <line nr="191">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetEOL"/>
      </line>
      <line nr="192">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetEOL"/>
      </line>
      <line nr="193">
        <covered by="Motley\Test\UsageFormatterTest::testSetGetEOL"/>
      </line>
      <line nr="197">
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="198">
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="199">
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="200">
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="201">
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="202">
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="203">
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="204">
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="205">
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="206">
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="208">
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="209">
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="210">
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="211">
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="212">
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="213">
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
      <line nr="214">
        <covered by="Motley\Test\UsageFormatterTest::testGetSetParam"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_COMMENT">/// Source code file for Motley::Test::UsageFormatterTest unit testing class.</token>
      </line>
      <line no="3">
        <token name="T_COMMENT">/// @copyright Copyright (c) 2017, Eric Alan Christiansen.</token>
      </line>
      <line no="4">
        <token name="T_COMMENT">/// MIT License. See &lt;https://opensource.org/licenses/MIT&gt;.</token>
      </line>
      <line no="5">
        <token name="T_COMMENT">/// @file</token>
      </line>
      <line no="6">
        <token name="T_COMMENT">### Note: This file uses Uses doxygen style annotation comments.</token>
      </line>
      <line no="7">
        <token name="T_COMMENT">### Note: This file possibly includes some PHPUnit comment directives.</token>
      </line>
      <line no="8">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Test</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9"/>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHPUnit</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Framework</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Testcase</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">UsageFormatter</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13"/>
      <line no="14">
        <token name="T_COMMENT">/// Tests the Motley::UsageFormatter class.</token>
      </line>
      <line no="15">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UsageFormatterTest</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Testcase</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="16"/>
      <line no="17">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Test instantiation.</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testNew</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fmt1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UsageFormatter</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertInstanceOf</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">UsageFormatter</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$fmt1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="22"/>
      <line no="23">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// test clear and output.</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testClearOutput</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UsageFormatter</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$s1a</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"abcdef"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatChunk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$s1a</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$s1b</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">rtrim</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getFormattedText</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$s1a</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$s1b</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">ob_start</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_COMMENT"># start stdout capture</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">outputFormattedText</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$s1c</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">rtrim</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">ob_get_contents</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">ob_end_clean</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_COMMENT"># turn off stdout capture</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$s1a</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$s1c</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">clear</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$s2</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">rtrim</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getFormattedText</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">""</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$s2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="39"/>
      <line no="40">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Test formatting.</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testFormatting</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$expectedText</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'[BEGIN TEST FORMATTING]'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHP_EOL</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Hello world!'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHP_EOL</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'  This is a very long and laborious'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHP_EOL</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'   sentence. It goes on and on and'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHP_EOL</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'   on. This exposition of ridiculous'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHP_EOL</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'   prose is simply for testing and'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHP_EOL</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'   demonstration purposes only.'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHP_EOL</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Options:'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHP_EOL</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'  -h | --help   Display help.'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHP_EOL</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'                     More help.'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHP_EOL</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'  -v | --version'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHP_EOL</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'                Display version.'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHP_EOL</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'  -d | --debug  Display additional debug'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHP_EOL</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'                information to standard'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHP_EOL</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'                error.'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHP_EOL</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'      thingAt2'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHP_EOL</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'      thingAt4'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHP_EOL</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'      thingAt6'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHP_EOL</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'       thingAt8'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHP_EOL</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'abcdefghijklmnopqrst'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHP_EOL</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">' uvwxyz'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHP_EOL</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'         abcdefghijk'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHP_EOL</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
      </line>
      <line no="65">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'         lmnopqrstuv'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHP_EOL</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
      </line>
      <line no="66">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'         wxyz'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHP_EOL</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'[END TEST FORMATTING]'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># init formatter</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UsageFormatter</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setContinueIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setColumnWidth</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">40</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setLeftIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setRightIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="74">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># mark beginning</token>
      </line>
      <line no="75">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatChunk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'[BEGIN TEST FORMATTING]'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatBreak</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># say hello</token>
      </line>
      <line no="78">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatText</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Hello world!"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatBreak</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="80">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># format a long sentence</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setLeftIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="82">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setRightIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">4</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="83">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$t</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"This is a very long and laborious sentence. It goes "</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$t</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONCAT_EQUAL">.=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"on and on and on. This exposition of ridiculous prose "</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="85">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$t</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONCAT_EQUAL">.=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"is simply for testing and demonstration purposes only."</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatText</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$t</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatBreak</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># format some more help like stuff</token>
      </line>
      <line no="89">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setLeftIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setRightIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="91">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># line</token>
      </line>
      <line no="92">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$c</token>
        <token name="T_EQUAL">=</token>
        <token name="T_LNUMBER">17</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="93">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatChunk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Options:"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="94">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatBreak</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="95">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># line</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setLeftIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatChunk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"-h | --help"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatText</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Display help."</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$c</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="99">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatText</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"More help."</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$c</token>
        <token name="T_PLUS">+</token>
        <token name="T_LNUMBER">5</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="100">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatBreak</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># line</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatChunk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"-v | --version"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatText</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Display version."</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$c</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="104">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatBreak</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="105">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># line</token>
      </line>
      <line no="106">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatChunk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"-d | --debug"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="107">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatText</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Display additional debug information to standard error."</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$c</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="108">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatBreak</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="109">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># weird stuff</token>
      </line>
      <line no="110">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setLeftIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">4</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="111">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setContinueIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="112">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setRightIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="113">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatChunk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"thingAt2"</token>
        <token name="T_COMMA">,</token>
        <token name="T_LNUMBER">2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="114">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatChunk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"thingAt4"</token>
        <token name="T_COMMA">,</token>
        <token name="T_LNUMBER">4</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="115">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatChunk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"thingAt6"</token>
        <token name="T_COMMA">,</token>
        <token name="T_LNUMBER">6</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="116">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatChunk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"thingAt8"</token>
        <token name="T_COMMA">,</token>
        <token name="T_LNUMBER">8</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="117">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatBreak</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="118">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># force a cut at no specific column</token>
      </line>
      <line no="119">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setLeftIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="120">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setContinueIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="121">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setRightIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">20</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="122">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatChunk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"abcdefghijklmnopqrstuvwxyz"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="123">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatBreak</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="124">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># force a cut at a specific column</token>
      </line>
      <line no="125">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatChunk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"abcdefghijklmnopqrstuvwxyz"</token>
        <token name="T_COMMA">,</token>
        <token name="T_LNUMBER">10</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="126">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatBreak</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="127">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># mark end</token>
      </line>
      <line no="128">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setLeftIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="129">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setRightIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="130">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setContinueIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="131">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatChunk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'[END TEST FORMATTING]'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="132">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># test results</token>
      </line>
      <line no="133">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$actualText</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$w</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getFormattedText</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="134">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$expectedText</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$actualText</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="135">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="136"/>
      <line no="137">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// test set/get column width.</token>
      </line>
      <line no="138">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testSetGetColumnWidth</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="139">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UsageFormatter</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="140">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertGreaterThan</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getColumnWidth</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="141">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$w2</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">75</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="142">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setColumnWidth</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$w2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="143">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$w2</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getColumnWidth</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="144">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="145"/>
      <line no="146">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// test set/get left indent.</token>
      </line>
      <line no="147">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testSetGetLeftIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="148">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UsageFormatter</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="149">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getLeftIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="150">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$ind</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">2</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="151">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setLeftIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$ind</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="152">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$ind</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getLeftIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="153">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="154"/>
      <line no="155">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// test set/get right indent.</token>
      </line>
      <line no="156">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testSetGetRightIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="157">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UsageFormatter</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="158">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getRightIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="159">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$ind</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">2</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="160">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setRightIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$ind</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="161">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$ind</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getRightIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="162">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="163"/>
      <line no="164">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// test set/get continue indent.</token>
      </line>
      <line no="165">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testSetGetContIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="166">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UsageFormatter</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="167">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getContinueIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="168">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$ind</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">2</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="169">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setContinueIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$ind</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="170">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$ind</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getContinueIndent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="171">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="172"/>
      <line no="173">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// test set/get max length.</token>
      </line>
      <line no="174">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testSetGetMaxLength</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="175">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UsageFormatter</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="176">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$one2nine</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"123456789"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="177">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">formatChunk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"123456789"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="178">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getMaxLength</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="179">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$out</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getFormattedText</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="180">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$one2nine</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">rtrim</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$out</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="181">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setMaxLength</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">6</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="182">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">6</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getMaxLength</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="183">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$out</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getFormattedText</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="184">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">substr</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$one2nine</token>
        <token name="T_COMMA">,</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
        <token name="T_LNUMBER">6</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">rtrim</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$out</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="185">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="186"/>
      <line no="187">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// test set/get eol.</token>
      </line>
      <line no="188">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testSetGetEOL</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="189">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UsageFormatter</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="190">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">PHP_EOL</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getEOL</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="191">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setEOL</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"bork"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="192">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"bork"</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getEOL</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="193">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="194"/>
      <line no="195">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Test get/get param.</token>
      </line>
      <line no="196">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testGetSetParam</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="197">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UsageFormatter</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="198">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">invokeFunction</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="199">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"setParam"</token>
        <token name="T_COMMA">,</token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">UsageFormatter</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">LEFT_INDENT</token>
        <token name="T_COMMA">,</token>
        <token name="T_LNUMBER">4</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="200">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$leftIndent</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">invokeFunction</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="201">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"getParam"</token>
        <token name="T_COMMA">,</token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">UsageFormatter</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">LEFT_INDENT</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="202">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">4</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$leftIndent</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="203">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$params</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">invokeFunction</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="204">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"getParams"</token>
        <token name="T_COMMA">,</token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="205">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$leftIndent</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$params</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">UsageFormatter</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">LEFT_INDENT</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="206">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">4</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$leftIndent</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="207">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># try setting a bad parameter name</token>
      </line>
      <line no="208">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">engageCaptureHandler</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">E_USER_WARNING</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="209">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">invokeFunction</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="210">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$fmt</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"setParam"</token>
        <token name="T_COMMA">,</token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"BadParamName"</token>
        <token name="T_COMMA">,</token>
        <token name="T_LNUMBER">99</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="211">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">disengageCaptureHandler</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="212">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$errs</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">getCapturedErrors</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="213">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$errs</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="214">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="215"/>
      <line no="216">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="217">
        <token name="T_CLOSE_TAG">?&gt;</token>
      </line>
      <line no="218"/>
    </source>
  </file>
</phpunit>
