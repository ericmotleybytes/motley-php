<?xml version="1.0"?>
<phpunit xmlns="http://schema.phpunit.de/coverage/1.0">
  <file name="AutoloaderTest.php" path="/Test">
    <totals>
      <lines total="51" comments="28" code="23" executable="20" executed="20" percent="100.00"/>
      <methods count="4" tested="4" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="AutoloaderTest" start="15" executable="20" executed="20" crap="4">
      <package full="" name="" sub="" category=""/>
      <namespace name="Motley\Test"/>
      <method name="setUp" signature="setUp()" start="18" end="20" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="tearDown" signature="tearDown()" start="23" end="25" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="testRegisterFunction" signature="testRegisterFunction()" start="28" end="37" crap="1" executable="7" executed="7" coverage="100"/>
      <method name="testAutoload" signature="testAutoload()" start="40" end="49" crap="1" executable="9" executed="9" coverage="100"/>
    </class>
    <coverage>
      <line nr="19">
        <covered by="Motley\Test\AutoloaderTest::testRegisterFunction"/>
        <covered by="Motley\Test\AutoloaderTest::testAutoload"/>
      </line>
      <line nr="20">
        <covered by="Motley\Test\AutoloaderTest::testRegisterFunction"/>
        <covered by="Motley\Test\AutoloaderTest::testAutoload"/>
      </line>
      <line nr="24">
        <covered by="Motley\Test\AutoloaderTest::testRegisterFunction"/>
        <covered by="Motley\Test\AutoloaderTest::testAutoload"/>
      </line>
      <line nr="25">
        <covered by="Motley\Test\AutoloaderTest::testRegisterFunction"/>
        <covered by="Motley\Test\AutoloaderTest::testAutoload"/>
      </line>
      <line nr="31">
        <covered by="Motley\Test\AutoloaderTest::testRegisterFunction"/>
      </line>
      <line nr="32">
        <covered by="Motley\Test\AutoloaderTest::testRegisterFunction"/>
      </line>
      <line nr="33">
        <covered by="Motley\Test\AutoloaderTest::testRegisterFunction"/>
      </line>
      <line nr="34">
        <covered by="Motley\Test\AutoloaderTest::testRegisterFunction"/>
      </line>
      <line nr="35">
        <covered by="Motley\Test\AutoloaderTest::testRegisterFunction"/>
      </line>
      <line nr="36">
        <covered by="Motley\Test\AutoloaderTest::testRegisterFunction"/>
      </line>
      <line nr="37">
        <covered by="Motley\Test\AutoloaderTest::testRegisterFunction"/>
      </line>
      <line nr="41">
        <covered by="Motley\Test\AutoloaderTest::testAutoload"/>
      </line>
      <line nr="42">
        <covered by="Motley\Test\AutoloaderTest::testAutoload"/>
      </line>
      <line nr="43">
        <covered by="Motley\Test\AutoloaderTest::testAutoload"/>
      </line>
      <line nr="44">
        <covered by="Motley\Test\AutoloaderTest::testAutoload"/>
      </line>
      <line nr="45">
        <covered by="Motley\Test\AutoloaderTest::testAutoload"/>
      </line>
      <line nr="46">
        <covered by="Motley\Test\AutoloaderTest::testAutoload"/>
      </line>
      <line nr="47">
        <covered by="Motley\Test\AutoloaderTest::testAutoload"/>
      </line>
      <line nr="48">
        <covered by="Motley\Test\AutoloaderTest::testAutoload"/>
      </line>
      <line nr="49">
        <covered by="Motley\Test\AutoloaderTest::testAutoload"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_COMMENT">/// Source code file for Motley::Test::AutoloaderTest unit testing class.</token>
      </line>
      <line no="3">
        <token name="T_COMMENT">/// @copyright Copyright (c) 2017, Eric Alan Christiansen.</token>
      </line>
      <line no="4">
        <token name="T_COMMENT">/// MIT License. See &lt;https://opensource.org/licenses/MIT&gt;.</token>
      </line>
      <line no="5">
        <token name="T_COMMENT">/// @file</token>
      </line>
      <line no="6">
        <token name="T_COMMENT">### Note: This file uses Uses doxygen style annotation comments.</token>
      </line>
      <line no="7">
        <token name="T_COMMENT">### Note: This file possibly includes some PHPUnit comment directives.</token>
      </line>
      <line no="8">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Test</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9"/>
      <line no="10">
        <token name="T_REQUIRE_ONCE">require_once</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_DIR">__DIR__</token>
        <token name="T_DOT">.</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/../Autoloader.php'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_COMMENT">// be explicit</token>
      </line>
      <line no="11"/>
      <line no="12">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHPUnit</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Framework</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Testcase</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13"/>
      <line no="14">
        <token name="T_COMMENT">/// Tests the Motley::Autoloader class.</token>
      </line>
      <line no="15">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">AutoloaderTest</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Testcase</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="16"/>
      <line no="17">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// A unit test set-uo function to initialize some tests.</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setUp</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">        </token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Autoloader</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">unregister</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="21"/>
      <line no="22">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// A unit test tear-down function to possibly restore autoloaders.</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">tearDown</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">        </token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Autoloader</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">register</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="26"/>
      <line no="27">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Test register and unregister.</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testRegisterFunction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># initially setUp has removed the motley autoloader,</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># but the class should still be defined.</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Autoloader</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">isRegistered</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">        </token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Autoloader</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">register</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertTrue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Autoloader</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">isRegistered</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">        </token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Autoloader</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">unregister</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Autoloader</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">isRegistered</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">        </token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Autoloader</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">register</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="38"/>
      <line no="39">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Test invoking autoload directly.</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testAutoload</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">        </token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Autoloader</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">unregister</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fakeClassName</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'NONEXISTENT\CLASS'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$stat</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Autoloader</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">autoload</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$fakeClassName</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertFalse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$stat</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$realClassName</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Motley\UnitTestSupport'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$stat</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Autoloader</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">autoload</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$realClassName</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertTrue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">class_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$realClassName</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">false</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">        </token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Autoloader</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">register</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="50">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="51">
        <token name="T_CLOSE_TAG">?&gt;</token>
      </line>
      <line no="52"/>
    </source>
  </file>
</phpunit>
