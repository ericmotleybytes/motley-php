<?xml version="1.0"?>
<phpunit xmlns="http://schema.phpunit.de/coverage/1.0">
  <file name="UnitTestSupportTest.php" path="/Test">
    <totals>
      <lines total="136" comments="42" code="94" executable="84" executed="84" percent="100.00"/>
      <methods count="4" tested="4" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="UnitTestSupportTest" start="17" executable="84" executed="84" crap="8">
      <package full="" name="" sub="" category=""/>
      <namespace name="Motley\Test"/>
      <method name="tearDown" signature="tearDown()" start="23" end="33" crap="3" executable="1" executed="1" coverage="100"/>
      <method name="testInvokeFunction" signature="testInvokeFunction()" start="36" end="50" crap="1" executable="14" executed="14" coverage="100"/>
      <method name="testCaptureHandler" signature="testCaptureHandler()" start="53" end="78" crap="1" executable="24" executed="24" coverage="100"/>
      <method name="testRecursiveDirectoryDelete" signature="testRecursiveDirectoryDelete()" start="81" end="134" crap="3" executable="45" executed="45" coverage="100"/>
    </class>
    <coverage>
      <line nr="33">
        <covered by="Motley\Test\UnitTestSupportTest::testInvokeFunction"/>
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="37">
        <covered by="Motley\Test\UnitTestSupportTest::testInvokeFunction"/>
      </line>
      <line nr="38">
        <covered by="Motley\Test\UnitTestSupportTest::testInvokeFunction"/>
      </line>
      <line nr="39">
        <covered by="Motley\Test\UnitTestSupportTest::testInvokeFunction"/>
      </line>
      <line nr="40">
        <covered by="Motley\Test\UnitTestSupportTest::testInvokeFunction"/>
      </line>
      <line nr="41">
        <covered by="Motley\Test\UnitTestSupportTest::testInvokeFunction"/>
      </line>
      <line nr="42">
        <covered by="Motley\Test\UnitTestSupportTest::testInvokeFunction"/>
      </line>
      <line nr="43">
        <covered by="Motley\Test\UnitTestSupportTest::testInvokeFunction"/>
      </line>
      <line nr="44">
        <covered by="Motley\Test\UnitTestSupportTest::testInvokeFunction"/>
      </line>
      <line nr="45">
        <covered by="Motley\Test\UnitTestSupportTest::testInvokeFunction"/>
      </line>
      <line nr="46">
        <covered by="Motley\Test\UnitTestSupportTest::testInvokeFunction"/>
      </line>
      <line nr="47">
        <covered by="Motley\Test\UnitTestSupportTest::testInvokeFunction"/>
      </line>
      <line nr="48">
        <covered by="Motley\Test\UnitTestSupportTest::testInvokeFunction"/>
      </line>
      <line nr="49">
        <covered by="Motley\Test\UnitTestSupportTest::testInvokeFunction"/>
      </line>
      <line nr="50">
        <covered by="Motley\Test\UnitTestSupportTest::testInvokeFunction"/>
      </line>
      <line nr="54">
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
      </line>
      <line nr="55">
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
      </line>
      <line nr="56">
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
      </line>
      <line nr="57">
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
      </line>
      <line nr="58">
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
      </line>
      <line nr="60">
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
      </line>
      <line nr="61">
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
      </line>
      <line nr="62">
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
      </line>
      <line nr="63">
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
      </line>
      <line nr="64">
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
      </line>
      <line nr="65">
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
      </line>
      <line nr="66">
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
      </line>
      <line nr="67">
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
      </line>
      <line nr="68">
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
      </line>
      <line nr="69">
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
      </line>
      <line nr="70">
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
      </line>
      <line nr="71">
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
      </line>
      <line nr="72">
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
      </line>
      <line nr="73">
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
      </line>
      <line nr="74">
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
      </line>
      <line nr="75">
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
      </line>
      <line nr="76">
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
      </line>
      <line nr="77">
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
      </line>
      <line nr="78">
        <covered by="Motley\Test\UnitTestSupportTest::testCaptureHandler"/>
      </line>
      <line nr="82">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="83">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="84">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="85">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="86">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="87">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="88">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="89">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="90">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="91">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="92">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="93">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="95">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="96">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="97">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="98">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="99">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="100">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="102">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="103">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="104">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="105">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="106">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="108">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="109">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="110">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="111">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="113">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="114">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="115">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="116">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="118">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="119">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="121">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="122">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="123">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="124">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="125">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="126">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="127">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="128">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="130">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="131">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="133">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
      <line nr="134">
        <covered by="Motley\Test\UnitTestSupportTest::testRecursiveDirectoryDelete"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_COMMENT">/// Source code file for Motley::Test::UnitTestSupportTest unit testing class.</token>
      </line>
      <line no="3">
        <token name="T_COMMENT">/// @copyright Copyright (c) 2017, Eric Alan Christiansen.</token>
      </line>
      <line no="4">
        <token name="T_COMMENT">/// MIT License. See &lt;https://opensource.org/licenses/MIT&gt;.</token>
      </line>
      <line no="5">
        <token name="T_COMMENT">/// @file</token>
      </line>
      <line no="6">
        <token name="T_COMMENT">### Note: This file uses Uses doxygen style annotation comments.</token>
      </line>
      <line no="7">
        <token name="T_COMMENT">### Note: This file possibly includes some PHPUnit comment directives.</token>
      </line>
      <line no="8">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Test</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9"/>
      <line no="10">
        <token name="T_REQUIRE_ONCE">require_once</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_DIR">__DIR__</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/ZzzSampleClass.php'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11"/>
      <line no="12">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PHPUnit</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Framework</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Testcase</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="14">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Test</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ZzzSampleClass</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="15"/>
      <line no="16">
        <token name="T_COMMENT">/// Tests the Motley::UnitTestSupport class.</token>
      </line>
      <line no="17">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UnitTestSupportTest</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Testcase</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="18"/>
      <line no="19">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$lastUnit</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_COMMENT">///&lt; Last interesting UnitTestSupport instance.</token>
      </line>
      <line no="20"/>
      <line no="21">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// A unit test tear-down function to clean up possible test</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// error handlers.</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">tearDown</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// @codeCoverageIgnoreStart</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_VARIABLE">$captureHandlerSet</token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">restore_error_handler</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_VARIABLE">$captureHandlerSet</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">is_null</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">lastUnit</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">lastUnit</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">cleanupTmp</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// @codeCoverageIgnoreEnd</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="34"/>
      <line no="35">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Test invokeFunction.</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testInvokeFunction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$sam</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ZzzSampleClass</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">ZzzSampleClass</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">PUBFUN</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">invokeFunction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$sam</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"publicFunction"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">ZzzSampleClass</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">PROFUN</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">invokeFunction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$sam</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"protectedFunction"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">ZzzSampleClass</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">PRIFUN</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">invokeFunction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$sam</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"privateFunction"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">ZzzSampleClass</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">STAPUBFUN</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">invokeFunction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$sam</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"staticPublicFunction"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">ZzzSampleClass</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">STAPROFUN</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">invokeFunction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$sam</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"staticProtectedFunction"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">ZzzSampleClass</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">STAPRIFUN</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">invokeFunction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$sam</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"staticPrivateFunction"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="51"/>
      <line no="52">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Test the capture error handler.</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testCaptureHandler</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$noticeMsg</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"notice"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$warningMsg</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"warning"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$errorMsg</token>
        <token name="T_WHITESPACE">   </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"error"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">engageCaptureHandler</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">E_USER_NOTICE</token>
        <token name="T_PIPE">|</token>
        <token name="T_STRING">E_USER_WARNING</token>
        <token name="T_PIPE">|</token>
        <token name="T_STRING">E_USER_ERROR</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">trigger_error</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$noticeMsg</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">E_USER_NOTICE</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$errs</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">getCapturedErrors</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$errs</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$err</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$errs</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$noticeMsg</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$err</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ERRSTR</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">clearCapturedErrors</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="65">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">trigger_error</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$warningMsg</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">E_USER_WARNING</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="66">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$errs</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">getCapturedErrors</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$errs</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$err</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$errs</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$warningMsg</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$err</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ERRSTR</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">clearCapturedErrors</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">trigger_error</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$errorMsg</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">E_USER_ERROR</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$errs</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">getCapturedErrors</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$errs</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="74">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$err</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$errs</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="75">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$errorMsg</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$err</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ERRSTR</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">clearCapturedErrors</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">disengageCaptureHandler</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="78">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="79"/>
      <line no="80">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Test the temporary dir/file routines.</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">testRecursiveDirectoryDelete</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="82">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$unt</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="83">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertInstanceOf</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">UnitTestSupport</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$unt</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">lastUnit</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$unt</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="85">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$exp1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'../../test/tmp'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$tmpdir1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$unt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getTmpDirRoot</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertStringEndsWith</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$exp1</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$tmpdir1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$tmpdir2</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DIR">__DIR__</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/tmp'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="89">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$unt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setTmpDirRoot</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$tmpdir2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$tmpdir2</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$unt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getTmpDirRoot</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="91">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$tmproot</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$unt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">createTmpRootDir</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="92">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertGreaterThan</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">strlen</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$tmproot</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="93">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$dircnt1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$unt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getTmpDirsCreated</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="94">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># make a specific tmp subdir</token>
      </line>
      <line no="95">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$subdir1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$unt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">createTmpSubDir</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"bork"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertStringEndsWith</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"bork"</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$subdir1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$expcnt2</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$dircnt1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PLUS">+</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$cDirs</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$unt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getTmpDirsCreated</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="99">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$expcnt2</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$cDirs</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="100">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$tst</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">in_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$subdir1</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$cDirs</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># make a random tmp subdir</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$subdir2</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$unt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">createTmpSubDir</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$expcnt3</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$expcnt2</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PLUS">+</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="104">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$cDirs</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$unt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getTmpDirsCreated</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="105">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$expcnt3</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$cDirs</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="106">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$tst</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">in_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$subdir2</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$cDirs</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="107">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># create a temp dummy file</token>
      </line>
      <line no="108">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$file1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_VARIABLE">$subdir2</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">/borkbork.bork</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="109">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$dummy</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"bork\n"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="110">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$file1a</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$unt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">createTmpDummyFile</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$file1</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$dummy</token>
        <token name="T_COMMA">,</token>
        <token name="T_LNUMBER">100</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="111">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$file1</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$file1a</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="112">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># create a rogue file</token>
      </line>
      <line no="113">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fh</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">fopen</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$file1a</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"r"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="114">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$line1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">fgets</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$fh</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="115">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">fclose</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$fh</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="116">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEquals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$dummy</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$line1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="117">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># create a rogue subdir</token>
      </line>
      <line no="118">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$rogueDir</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_VARIABLE">$subdir2</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">/rogue</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="119">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">mkdir</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$rogueDir</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="120">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT"># test cleanup</token>
      </line>
      <line no="121">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$saveFiles</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$unt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getTmpFilesCreated</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="122">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$saveDirs</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$unt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getTmpDirsCreated</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="123">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$xtraFile</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_VARIABLE">$subdir2</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">/xtra.tmp</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="124">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fh</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">fopen</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$xtraFile</token>
        <token name="T_COMMA">,</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"w"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="125">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">fclose</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$fh</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="126">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$unt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">cleanupTmp</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="127">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$saveFiles</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$file</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="128">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertFileNotExists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$file</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="129">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="130">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$saveDirs</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$dir</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="131">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertFileNotExists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$dir</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="132">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="133">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">lastUnit</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="134">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="135">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="136">
        <token name="T_CLOSE_TAG">?&gt;</token>
      </line>
      <line no="137"/>
    </source>
  </file>
</phpunit>
