<?xml version="1.0"?>
<phpunit xmlns="http://schema.phpunit.de/coverage/1.0">
  <file name="CommandOptGrp.php" path="/">
    <totals>
      <lines total="135" comments="68" code="67" executable="55" executed="55" percent="100.00"/>
      <methods count="8" tested="8" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="CommandOptGrp" start="14" executable="55" executed="55" crap="22">
      <package full="" name="" sub="" category=""/>
      <namespace name="Motley"/>
      <method name="__construct" signature="__construct(string $name=null, string $desc=null)" start="23" end="31" crap="3" executable="6" executed="6" coverage="100"/>
      <method name="addOption" signature="addOption(CommandOpt $option) : int" start="38" end="59" crap="5" executable="16" executed="16" coverage="100"/>
      <method name="getOptions" signature="getOptions() : array" start="63" end="65" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="clearOptions" signature="clearOptions()" start="68" end="71" crap="1" executable="3" executed="3" coverage="100"/>
      <method name="getSwitches" signature="getSwitches() : array" start="75" end="87" crap="4" executable="8" executed="8" coverage="100"/>
      <method name="getOptionBySwitch" signature="getOptionBySwitch(string $switch)" start="92" end="105" crap="4" executable="9" executed="9" coverage="100"/>
      <method name="validate" signature="validate(string $param) : bool" start="113" end="127" crap="3" executable="11" executed="11" coverage="100"/>
      <method name="getLastValidOption" signature="getLastValidOption()" start="130" end="132" crap="1" executable="1" executed="1" coverage="100"/>
    </class>
    <coverage>
      <line nr="24">
        <covered by="Motley\Test\CommandArrangeTest::testDefineGetClearArrangement"/>
        <covered by="Motley\Test\CommandOptGrpTest::testNew"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
      </line>
      <line nr="25">
        <covered by="Motley\Test\CommandArrangeTest::testDefineGetClearArrangement"/>
        <covered by="Motley\Test\CommandOptGrpTest::testNew"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
      </line>
      <line nr="27">
        <covered by="Motley\Test\CommandArrangeTest::testDefineGetClearArrangement"/>
        <covered by="Motley\Test\CommandOptGrpTest::testNew"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
      </line>
      <line nr="28">
        <covered by="Motley\Test\CommandOptGrpTest::testNew"/>
      </line>
      <line nr="30">
        <covered by="Motley\Test\CommandArrangeTest::testDefineGetClearArrangement"/>
        <covered by="Motley\Test\CommandOptGrpTest::testNew"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
      </line>
      <line nr="31">
        <covered by="Motley\Test\CommandArrangeTest::testDefineGetClearArrangement"/>
        <covered by="Motley\Test\CommandOptGrpTest::testNew"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
      </line>
      <line nr="39">
        <covered by="Motley\Test\CommandArrangeTest::testDefineGetClearArrangement"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
      </line>
      <line nr="40">
        <covered by="Motley\Test\CommandArrangeTest::testDefineGetClearArrangement"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
      </line>
      <line nr="41">
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
      </line>
      <line nr="42">
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
      </line>
      <line nr="43">
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
      </line>
      <line nr="44">
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
      </line>
      <line nr="47">
        <covered by="Motley\Test\CommandArrangeTest::testDefineGetClearArrangement"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
      </line>
      <line nr="48">
        <covered by="Motley\Test\CommandArrangeTest::testDefineGetClearArrangement"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
      </line>
      <line nr="49">
        <covered by="Motley\Test\CommandArrangeTest::testDefineGetClearArrangement"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
      </line>
      <line nr="50">
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
      </line>
      <line nr="51">
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
      </line>
      <line nr="52">
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
      </line>
      <line nr="54">
        <covered by="Motley\Test\CommandArrangeTest::testDefineGetClearArrangement"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
      </line>
      <line nr="56">
        <covered by="Motley\Test\CommandArrangeTest::testDefineGetClearArrangement"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
      </line>
      <line nr="57">
        <covered by="Motley\Test\CommandArrangeTest::testDefineGetClearArrangement"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
      </line>
      <line nr="58">
        <covered by="Motley\Test\CommandArrangeTest::testDefineGetClearArrangement"/>
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
      </line>
      <line nr="64">
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
      </line>
      <line nr="69">
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
      </line>
      <line nr="70">
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
      </line>
      <line nr="71">
        <covered by="Motley\Test\CommandOptGrpTest::testAddGetClearOptSwitches"/>
      </line>
      <line nr="76">
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
      </line>
      <line nr="77">
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
      </line>
      <line nr="78">
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
      </line>
      <line nr="79">
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
      </line>
      <line nr="80">
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
      </line>
      <line nr="81">
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
      </line>
      <line nr="82">
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
      </line>
      <line nr="86">
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
      </line>
      <line nr="93">
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
      </line>
      <line nr="94">
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
      </line>
      <line nr="95">
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
      </line>
      <line nr="96">
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
      </line>
      <line nr="97">
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
      </line>
      <line nr="98">
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
      </line>
      <line nr="99">
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
      </line>
      <line nr="100">
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
      </line>
      <line nr="104">
        <covered by="Motley\Test\CommandOptGrpTest::testGetSwitches"/>
      </line>
      <line nr="114">
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
      </line>
      <line nr="115">
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
      </line>
      <line nr="116">
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
      </line>
      <line nr="117">
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
      </line>
      <line nr="118">
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
      </line>
      <line nr="119">
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
      </line>
      <line nr="120">
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
      </line>
      <line nr="121">
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
      </line>
      <line nr="122">
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
      </line>
      <line nr="123">
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
      </line>
      <line nr="126">
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
      </line>
      <line nr="131">
        <covered by="Motley\Test\CommandOptGrpTest::testValidate"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_COMMENT">/// Source code file for the Motley::CommandOptGrp class.</token>
      </line>
      <line no="3">
        <token name="T_COMMENT">/// @copyright Copyright (c) 2017, Eric Alan Christiansen.\n</token>
      </line>
      <line no="4">
        <token name="T_COMMENT">/// MIT License. See &lt;https://opensource.org/licenses/MIT&gt;.</token>
      </line>
      <line no="5">
        <token name="T_COMMENT">/// @file</token>
      </line>
      <line no="6">
        <token name="T_COMMENT">### Note: This file uses Uses doxygen style annotation comments.</token>
      </line>
      <line no="7">
        <token name="T_COMMENT">### Note: This file possibly includes some PHPUnit comment directives.</token>
      </line>
      <line no="8">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Motley</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9"/>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">GuidGenerator</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Motley</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">CommandOpt</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12"/>
      <line no="13">
        <token name="T_COMMENT">/// Represent a command line option group.</token>
      </line>
      <line no="14">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandOptGrp</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CommandComponent</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="15"/>
      <line no="16">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_WHITESPACE">           </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">   </token>
        <token name="T_COMMENT">///&lt; CommandOpt objects in group.</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$switches</token>
        <token name="T_WHITESPACE">          </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">   </token>
        <token name="T_COMMENT">///&lt; Switches from all options.</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$lastValidOption</token>
        <token name="T_WHITESPACE">   </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">      </token>
        <token name="T_COMMENT">///&lt; CommandOpt that passed validate.</token>
      </line>
      <line no="19"/>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Class instance constructor.</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $name - The object name.</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $desc - The object description.</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_EQUAL">=</token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$desc</token>
        <token name="T_EQUAL">=</token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">is_null</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Options"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">is_null</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$desc</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$desc</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Command line options."</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">parent</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$desc</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="32"/>
      <line no="33">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Add an option to the option group.</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// If an option object with the same name already exists a warning</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// is issued and the option object if not added to the group.</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $option - A CommandOpt object to add to the group.</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @returns New number of options in group.</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">addOption</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">CommandOpt</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$option</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$optionName</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$option</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">options</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$opt</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$optionName</token>
        <token name="T_IS_EQUAL">==</token>
        <token name="T_VARIABLE">$opt</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">Option '</token>
        <token name="T_VARIABLE">$optionName</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">' already in group.</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">trigger_error</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">E_USER_WARNING</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">options</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$switches</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$option</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOptSwitches</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$switch</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">in_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$switch</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">switches</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">Switch '</token>
        <token name="T_VARIABLE">$switch</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">' already used in group.</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">trigger_error</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_COMMA">,</token>
        <token name="T_STRING">E_USER_WARNING</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">options</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$switches</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$switch</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">options</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$option</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">switches</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_merge</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">switches</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$switches</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">options</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="60"/>
      <line no="61">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Get the list of options in the group.</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @returns An array of CommandOpt objects in the group.</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getOptions</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">options</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="65">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="66"/>
      <line no="67">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Clear the list of options in the group.</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">clearOptions</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">options</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">switches</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">    </token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Get a consolidated list of switches from all options in group.</token>
      </line>
      <line no="74">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return An array of all switches from all options.</token>
      </line>
      <line no="75">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getSwitches</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOptions</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="78">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$option</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$switches</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$option</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOptSwitches</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="80">
        <token name="T_WHITESPACE">            </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$switches</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$switch</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">in_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$switch</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="82">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$switch</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="83">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="85">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="88"/>
      <line no="89">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Get the option associated with a switch (if any).</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $switch - A '-...' or '--...' command line switch.</token>
      </line>
      <line no="91">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return The CommandOpt object with the switch, or null if no matches.</token>
      </line>
      <line no="92">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getOptionBySwitch</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$switch</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="93">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="94">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOptions</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="95">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$option</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$switches</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$option</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOptSwitches</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">            </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$switches</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$s</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$s</token>
        <token name="T_IS_EQUAL">==</token>
        <token name="T_VARIABLE">$switch</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="99">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$option</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="100">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_BREAK">break</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">2</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_COMMENT">// break from both loops</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="104">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="105">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="106"/>
      <line no="107">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Validate a switch parameter against a group of component options.</token>
      </line>
      <line no="108">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// This overrides the parent validate function.</token>
      </line>
      <line no="109">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @param $param - A command line parameter(s).</token>
      </line>
      <line no="110">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// @return TRUE is trhe param if valid for one of the options in the group.</token>
      </line>
      <line no="111">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Only one option should match because overlapping options (two options which</token>
      </line>
      <line no="112">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// use the same switch) are prevented when adding options to the group.</token>
      </line>
      <line no="113">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">validate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$param</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="114">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="115">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOptions</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="116">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$option</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="117">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$status</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$option</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$param</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="118">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$status</token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="119">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="120">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">lastValidOption</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$option</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="121">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Option "</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$option</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE"> validated '</token>
        <token name="T_VARIABLE">$param</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">'.</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="122">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">saveLastParam</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$param</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_COMMA">,</token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="123">
        <token name="T_WHITESPACE">                </token>
        <token name="T_BREAK">break</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="124">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="125">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="126">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="127">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="128"/>
      <line no="129">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/// Get the last option to pass a validate param test.</token>
      </line>
      <line no="130">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getLastValidOption</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="131">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">lastValidOption</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="132">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="133"/>
      <line no="134">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="135">
        <token name="T_CLOSE_TAG">?&gt;</token>
      </line>
      <line no="136"/>
    </source>
  </file>
</phpunit>
